{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Asys.js\";\nimport React, { Component } from \"react\";\nimport Cookies from 'universal-cookie';\nimport XMLParser from 'react-xml-parser';\nimport '../styles/asys.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nclass AdminSystem extends Component {\n  constructor() {\n    super();\n\n    this.cerrarSesion = () => {\n      cookies.remove('rol', {\n        path: \"/\"\n      });\n      window.location.href = './';\n    };\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.cargarXml = this.cargarXml.bind(this);\n    this.sendXml = this.sendXml.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  sendXml() {\n    fetch('/carga', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"xml\": this.state.value\n      }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      window.alert(data.msg);\n      console.log(data.msg);\n    }).catch(err => console.error(err));\n    this.setState({\n      value: ''\n    });\n  }\n\n  cargarXml(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileReader = new FileReader();\n    fileReader.readAsText(file);\n\n    fileReader.onload = () => {\n      console.log(fileReader.result);\n      this.setState({\n        value: fileReader.result\n      });\n    };\n\n    fileReader.onerror = () => {\n      console.log(fileReader.error);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        role: \"navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"menuToggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"menu\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.cerrarSesion(),\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Cerrar Sesion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xml\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Informacion Cargada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: false,\n            accept: \".xml\",\n            onChange: this.cargarXml\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"value\",\n              value: this.state.value,\n              onChange: this.handleChange,\n              id: \"textExample\",\n              rows: \"5\",\n              cols: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.sendXml,\n              id: \"type\",\n              children: \"Confirmar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminSystem;","map":{"version":3,"sources":["/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Asys.js"],"names":["React","Component","Cookies","XMLParser","cookies","AdminSystem","constructor","cerrarSesion","remove","path","window","location","href","state","value","handleChange","bind","cargarXml","sendXml","e","name","target","setState","fetch","method","body","JSON","stringify","headers","then","res","json","data","alert","msg","console","log","catch","err","error","file","files","fileReader","FileReader","readAsText","onload","result","onerror","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from 'universal-cookie';\nimport XMLParser from 'react-xml-parser';\nimport '../styles/asys.css'\n\n\nconst cookies = new Cookies();\nclass AdminSystem extends Component{\n    constructor() {\n        super();\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.cargarXml = this.cargarXml.bind(this);\n        this.sendXml = this.sendXml.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          [name]: value\n        });\n    }\n    sendXml(){\n        fetch('/carga', {\n            method: 'POST',\n            body: JSON.stringify({\"xml\": this.state.value}),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => { \n                window.alert(data.msg);\n                console.log(data.msg)\n            })\n            .catch(err => console.error(err));\n            this.setState({value: ''});\n\n    }\n\n    cerrarSesion=()=>{\n        cookies.remove('rol', {path: \"/\"});\n        window.location.href='./';\n    }\n\n    cargarXml(e){\n        const file = e.target.files[0];\n        if ( !file ) return;\n\n        const fileReader = new FileReader();\n\n        fileReader.readAsText( file );\n\n        fileReader.onload = () => {\n        console.log( fileReader.result );\n        this.setState({value: fileReader.result});\n        }\n\n        fileReader.onerror = () => {\n        console.log( fileReader.error );\n        }\n    }\n    \n    render (){\n        return <div>\n            <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n                <input type=\"checkbox\"/>\n                <span></span>\n                <span></span>\n                <span></span>\n                <ul id=\"menu\">\n\n                <button onClick={()=>this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n                </ul>\n            </div>\n            </nav>\n            <div className=\"xml\">\n                <h1>Informacion Cargada</h1>\n                <section>\n                    <input type=\"file\" \n                        multiple={false}\n                        accept=\".xml\"\n                        onChange={this.cargarXml}\n                    />\n                    <p>\n                    <textarea name=\"value\" value={this.state.value} onChange={this.handleChange} id=\"textExample\" rows=\"5\" cols=\"60\"></textarea>\n                    </p>\n                    <p>\n                        <button onClick={this.sendXml} id='type'>Confirmar</button>\n                    </p>\n                </section>\n            </div>\n        </div>\n    }\n}\n\n\nexport default AdminSystem;"]},"metadata":{},"sourceType":"module"}