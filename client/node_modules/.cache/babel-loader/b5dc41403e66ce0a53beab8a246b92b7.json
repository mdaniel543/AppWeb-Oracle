{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Applicant.js\";\nimport React, { Component, useState } from \"react\";\nimport Cookies from 'universal-cookie';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { Table, Button, Container, Modal, ModalHeader, ModalBody, FormGroup, ModalFooter } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nclass Applicant extends Component {\n  constructor() {\n    super();\n    if (cookies.get('id') === undefined) window.location.href = \"./login\";\n    this.state = {\n      id: cookies.get('id'),\n      tasks: [],\n      nombre: '',\n      Requisitos: [],\n      load2: true,\n      modalVer: false,\n      modalCargar: false,\n      load: true,\n      data: {},\n      profile: {\n        nombre: '',\n        fecha: '',\n        apellido: '',\n        correo: '',\n        direccion: '',\n        telefono: '',\n        cv: '',\n        primera: '',\n        depa: '',\n        puestoID: '',\n        puesto: ''\n      }\n    };\n    this.fetchProfile();\n    this.fetchRequisitos();\n  }\n\n  cerrarSesion() {\n    cookies.remove('id', {\n      path: \"/\"\n    });\n    window.location.href = './';\n  }\n\n  fetchProfile() {\n    fetch('/selectPr', {\n      method: 'POST',\n      body: JSON.stringify({\n        cui: this.state.id\n      }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        profile: data\n      });\n      this.Comprobar(data.primera);\n    }).catch(err => console.error(err));\n  }\n\n  Comprobar(primera) {\n    if (primera == '1') {\n      this.setState({\n        modalCargar: true\n      });\n    }\n  }\n\n  fetchRequisitos() {\n    fetch('/requisitos', {\n      method: 'POST',\n      body: JSON.stringify({\n        puesto: this.state.profile.puestoID\n      }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        Requisitos: data,\n        load2: false\n      });\n    }).catch(err => console.error(err));\n  }\n\n  mostrarModalVer() {\n    this.setState({\n      modalVer: true\n    });\n  }\n\n  Cargar() {}\n\n  cerrarModalCargar() {\n    this.setState({\n      modalCargar: false\n    });\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      profile: { ...this.state.data,\n        [name]: value\n      }\n    });\n  }\n\n  Editar() {}\n\n  cerrarModalVer() {\n    this.setState({\n      modalVer: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(() => {\n        if (this.state.load == true) {\n          return /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"load\",\n              children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 20\n          }, this);\n        }\n      })(), /*#__PURE__*/_jsxDEV(Menu, {\n        this: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Ver, {\n        this: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Expediente, {\n        this: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Load, {\n        this: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nfunction Expediente(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.this.state.modalCargar,\n    fade: false,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Cargar Expediente para el puesto \", this.state.profile.puesto]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"DATOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => props.this.mostrarModalVer(),\n          children: \"Ver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), props.this.state.Requisitos.map(requi => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [requi.requisito, \"(\", requi.formatos.map(format => /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [format.formato, \",\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 41\n            }, this)), \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: requi.requisito,\n            type: \"file\",\n            multiple: false,\n            accept: \".pdf\",\n            onChange: props.this.handleChangeF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"succes\",\n        onClick: () => props.this.Cargar(),\n        children: \"Cargar Expediente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        onClick: () => props.this.cerrarModalCargar(),\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Expediente;\n\nfunction Load(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.this.state.load2,\n    fade: false,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"load\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Load;\n\nfunction Menu(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      role: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"menuToggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"menu\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.this.cerrarSesion(),\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cerrar Sesion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"xml\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Expediente de: \", props.this.state.profile.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 14\n  }, this);\n}\n\n_c3 = Menu;\n\nfunction Ver(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.this.state.modalVer,\n    fade: false,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Aplicante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CUI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"user\",\n          type: \"text\",\n          readOnly: true,\n          value: props.this.state.profile.cui\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"nombre\",\n          type: \"text\",\n          onChange: props.this.handleChange,\n          value: props.this.state.profile.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Apellido:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"apellido\",\n          type: \"text\",\n          onChange: props.this.handleChange,\n          value: props.this.state.profile.apellido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"correo\",\n          type: \"text\",\n          onChange: props.this.handleChange,\n          value: props.this.state.profile.correo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Direccion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"direccion\",\n          type: \"text\",\n          onChange: props.this.handleChange,\n          value: props.this.state.profile.direccion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Telefono:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"user\",\n          type: \"text\",\n          onChange: props.this.handleChange,\n          value: props.this.state.profile.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => props.this.Editar(),\n          children: \"Ver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"cv\",\n          type: \"file\",\n          multiple: false,\n          accept: \".pdf\",\n          onChange: props.this.handleChangeF\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => props.this.Editar(),\n        children: \"Editar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        onClick: () => props.this.cerrarModalVer(),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n}\n/*\n\nfunction Fethc(props) {\n    return(\n        <Container>\n        <Table>\n            <thead>\n            <tr>\n                <th>Requisito</th>\n                <th>Ver</th>\n                <th>Corregir</th>\n            </tr>\n            </thead>\n\n            {props.this.state.tasks.map((dato) => (\n                (() => {\n                    if(dato.apto == 1){\n                        return <Ifyes dato = {dato} this= {props.this}/>\n                    }else if(dato.apto == 0){\n                        return <Elsen dato = {dato} this = {props.this}/>\n                    }else if(dato.apto == 2){\n                        return <Nothing dato = {dato} this = {props.this}/>\n                    }\n                })()\n            ))}\n\n        </Table>\n        </Container>\n    );\n}\n\nfunction Ifyes(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#81C784\"}}>\n        <tr key={dato.id} >\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );    \n}\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id}>\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n        </td>\n        </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing(props) {\n    var dato = props.dato;\n    return(\n        <tbody >\n        <tr key={dato.id} >\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}>\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );   \n}\n\n*/\n\n\n_c4 = Ver;\nexport default Applicant;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Expediente\");\n$RefreshReg$(_c2, \"Load\");\n$RefreshReg$(_c3, \"Menu\");\n$RefreshReg$(_c4, \"Ver\");","map":{"version":3,"sources":["/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Applicant.js"],"names":["React","Component","useState","Cookies","Dropdown","Table","Button","Container","Modal","ModalHeader","ModalBody","FormGroup","ModalFooter","cookies","Applicant","constructor","get","undefined","window","location","href","state","id","tasks","nombre","Requisitos","load2","modalVer","modalCargar","load","data","profile","fecha","apellido","correo","direccion","telefono","cv","primera","depa","puestoID","puesto","fetchProfile","fetchRequisitos","cerrarSesion","remove","path","fetch","method","body","JSON","stringify","cui","headers","then","res","json","setState","Comprobar","catch","err","console","error","mostrarModalVer","Cargar","cerrarModalCargar","handleChange","e","name","value","target","Editar","cerrarModalVer","render","Expediente","props","this","map","requi","requisito","formatos","format","formato","handleChangeF","Load","Menu","Ver"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport Cookies from 'universal-cookie';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\n\nconst cookies = new Cookies();\n\nclass Applicant extends Component{\n\n    constructor(){\n        super();\n        if(cookies.get('id') === undefined) window.location.href = \"./login\"\n        this.state = {\n            id: cookies.get('id'),\n            tasks: [],\n            nombre: '',\n            Requisitos: [],\n            load2: true,\n            modalVer: false,\n            modalCargar: false,\n            load: true,\n            data: {},\n            profile:{\n                nombre: '',\n                fecha: '',\n                apellido: '',\n                correo: '', \n                direccion: '',\n                telefono: '',\n                cv: '',\n                primera: '',\n                depa: '',\n                puestoID: '',\n                puesto: ''\n            }\n        }\n        this.fetchProfile();\n        this.fetchRequisitos();\n    }\n\n    cerrarSesion(){\n        cookies.remove('id', {path: \"/\"});\n        window.location.href='./';\n    }\n\n    fetchProfile(){\n        fetch('/selectPr', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({profile: data});\n                this.Comprobar(data.primera)\n            })\n            .catch(err => console.error(err));\n    }\n\n\n    Comprobar(primera){\n        if(primera == '1'){\n            this.setState({modalCargar: true});\n        }\n    }\n\n    fetchRequisitos(){\n        fetch('/requisitos', {\n            method: 'POST',\n            body: JSON.stringify({\n                puesto: this.state.profile.puestoID\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({Requisitos: data, load2: false});\n            })\n            .catch(err => console.error(err));\n    }\n    mostrarModalVer(){\n        this.setState({modalVer: true})\n    }\n    Cargar(){\n\n    }\n\n    cerrarModalCargar(){\n        this.setState({modalCargar: false})\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          profile:{\n              ...this.state.data,\n              [name]: value\n          },\n        });\n    }\n    Editar(){\n\n    }\n    cerrarModalVer(){\n        this.setState({modalVer: false});\n    }\n\n    render(){\n        return <div>\n            {(() => {\n            if(this.state.load == true){\n                return<Container>\n                <div class=\"load\">\n                <hr/><hr/><hr/><hr/>\n                </div>\n                </Container>\n            }else{\n                return (\n                   <div>\n                           \n                   </div> \n                ); \n            }\n        })()}\n            <Menu this = {this}/>\n            <Ver this = {this}/>\n            <Expediente this = {this} /> \n           <Load this= {this}/>\n        </div>\n    }\n\n}\n\nfunction Expediente(props){\n    return(\n        <Modal isOpen={props.this.state.modalCargar} fade={false}>\n            <ModalHeader>\n            <div><h3>Cargar Expediente para el puesto {this.state.profile.puesto}</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    DATOS \n                </label>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.mostrarModalVer()}\n                >\n                Ver\n                </Button>  \n                </FormGroup>\n               \n                {\n                    props.this.state.Requisitos.map(requi =>\n                        <div>\n                        {\n                            <FormGroup>\n                            <label>\n                                {requi.requisito}({\n                                    requi.formatos.map(format => \n                                        <b>\n                                           {format.formato},     \n                                        </b>\n                                    )\n                                }): \n                            </label>\n                            <input\n                                className=\"form-control\"\n                                name={requi.requisito}\n                                type=\"file\"\n                                multiple={false}\n                                accept=\".pdf\"\n                                onChange={props.this.handleChangeF}\n                            />\n                            </FormGroup>\n                        }\n                        </div>\n                    )\n                }\n\n\n            </ModalBody>\n            <ModalFooter>  \n            <Button\n                color=\"succes\"\n                onClick={() => props.this.Cargar()}\n                >\n                 Cargar Expediente\n            </Button>      \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalCargar()}\n            >\n            Cerrar\n            </Button>\n            </ModalFooter>\n        </Modal> \n    );\n\n}\n\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\n\nfunction Menu(props){\n    return ( <div>\n        <nav role=\"navigation\">\n        <div id=\"menuToggle\">\n        <input type=\"checkbox\"/>\n        <span></span>\n        <span></span>\n        <span></span>\n        <ul id=\"menu\">\n        <button onClick={()=>props.this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n        </ul>\n        </div>\n        </nav>\n        <div className='xml'>\n        <h2>Expediente de: {props.this.state.profile.nombre}</h2>\n        </div>\n        </div>\n    );\n}\n\n\nfunction Ver(props) {\n    return(\n        <Modal isOpen={props.this.state.modalVer} fade={false}>\n            <ModalHeader>\n            <div><h3>Aplicante</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    CUI: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n\n                    value = {props.this.state.profile.cui}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"nombre\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.nombre}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Apellido: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"apellido\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.apellido}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"correo\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.correo}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Direccion: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"direccion\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.direccion}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Telefono: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.telefono}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    CV: \n                </label>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.Editar()}\n                >\n                Ver\n                </Button> \n                <label>\n                    Cargar \n                </label>\n                <input\n                className=\"form-control\"\n                name=\"cv\"\n                type=\"file\"\n                multiple={false}\n                accept=\".pdf\"\n                onChange={props.this.handleChangeF}\n                />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>  \n            <Button\n                color=\"primary\"\n                onClick={() => props.this.Editar()}\n                >\n                Editar Datos\n            </Button>      \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalVer()}\n            >\n            Cancelar\n            </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n/*\n\nfunction Fethc(props) {\n    return(\n        <Container>\n        <Table>\n            <thead>\n            <tr>\n                <th>Requisito</th>\n                <th>Ver</th>\n                <th>Corregir</th>\n            </tr>\n            </thead>\n\n            {props.this.state.tasks.map((dato) => (\n                (() => {\n                    if(dato.apto == 1){\n                        return <Ifyes dato = {dato} this= {props.this}/>\n                    }else if(dato.apto == 0){\n                        return <Elsen dato = {dato} this = {props.this}/>\n                    }else if(dato.apto == 2){\n                        return <Nothing dato = {dato} this = {props.this}/>\n                    }\n                })()\n            ))}\n\n        </Table>\n        </Container>\n    );\n}\n\nfunction Ifyes(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#81C784\"}}>\n        <tr key={dato.id} >\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );    \n}\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id}>\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n        </td>\n        </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing(props) {\n    var dato = props.dato;\n    return(\n        <tbody >\n        <tr key={dato.id} >\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}>\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );   \n}\n\n*/\nexport default Applicant;"]},"metadata":{},"sourceType":"module"}