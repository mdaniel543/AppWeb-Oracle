[{"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js":"1","/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js":"2","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js":"3","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js":"4","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js":"5","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js":"6","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js":"7"},{"size":192,"mtime":1634671114320,"results":"8","hashOfConfig":"9"},{"size":658,"mtime":1634682301324,"results":"10","hashOfConfig":"9"},{"size":15762,"mtime":1634851531063,"results":"11","hashOfConfig":"9"},{"size":2730,"mtime":1634686326328,"results":"12","hashOfConfig":"9"},{"size":220,"mtime":1634514982882,"results":"13","hashOfConfig":"9"},{"size":2727,"mtime":1634682249425,"results":"14","hashOfConfig":"9"},{"size":18553,"mtime":1634867297994,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1393peg",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js",[],["32","33"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js",["34","35","36","37"],"import React, { Component } from 'react';\nimport '../styles/guest.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {getCurrentDate} from '../utils/date'\nimport axios from 'axios';\n\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\nclass guest extends Component{\n\n    constructor() {\n        super();\n        this.state = {\n            tasks: [],\n            copy: [],\n            modalBuscar: false,\n            modalSelect: false,\n            depas: [],\n            catego: [],\n            form:{\n                cui:'',\n                nombre: '',\n                apellido: '',\n                correo: '',\n                direccion: '',\n                telefono: '',\n                cv: ''\n            },\n            search: {\n                puesto: null,\n                salario: null,\n                categoria: null,\n                depa: null\n            },\n            load: true,\n            bus: false,\n            file: '',\n            depa: '',\n            puesto: '',\n            date : getCurrentDate()\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeF = this.handleChangeF.bind(this);\n        this.handleChangeS = this.handleChangeS.bind(this);\n        this.handleChangeD = this.handleChangeD.bind(this);\n        this.handleChangeC = this.handleChangeC.bind(this);\n        this.fetchTasks()\n        this.fetchdepa()\n        this.fetchCategorias()\n    }\n    fetchTasks() {\n        fetch('/guest')\n          .then(res => res.json())\n          .then(data => {\n            this.setState({tasks: data, copy: data});\n            this.setState({load: false})\n            console.log(this.state.tasks)\n        });\n        \n    }\n    fetchdepa() {\n        fetch('/depas')\n          .then(res => res.json())\n          .then(data => {\n            const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }\n            this.setState({depas: aux});\n        });\n    }\n    fetchCategorias() {\n        fetch('/catego')\n          .then(res => res.json())\n          .then(data => {\n            /*const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }*/\n            this.setState({catego: data});\n        });\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          form:{\n              ...this.state.form,\n              [name]: value\n          },\n        });\n    }\n\n    handleChangeF(e) {\n        this.setState({\n          form:{\n              ...this.state.form,\n              cv: e.target.files[0]\n          },\n        });\n    }\n\n    handleChangeD(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              depa: e.value\n          },\n        });\n    }\n    handleChangeC(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              categoria: e.value\n          },\n        });\n    }\n\n    handleChangeS(e) {\n        const { name, value } = e.target;\n        this.setState({\n          search:{\n              ...this.state.search,\n              [name]: value\n          },\n        });\n    }\n\n    buscar(){\n        console.log(this.state.search)\n        this.setState({load: true})\n        fetch('/searchGuest', {\n            method: 'POST',\n            body: JSON.stringify({\n                puesto: this.state.search.puesto,\n                salario: this.state.search.salario,\n                categoria: this.state.search.categoria,\n                depa: this.state.search.depa\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data});\n                this.setState({load: false});\n            })\n            .catch(err => console.error(err));\n        this.setState({bus: true, modalBuscar: false})\n        this.setState({\n            search:{\n                ...this.state.search,\n                puesto: null,\n                salario: null,\n                depa: null,\n                categoria: null\n            },\n          });\n\n    }\n    mostrarModalBuscar(){\n        this.setState({modalBuscar: true})\n    }\n    cerrarModalBuscar(){\n        this.setState({modalBuscar: false})\n        //this.fetchTasks();\n    }\n    cerrarBusqueda(){\n        this.setState({tasks: this.state.copy, bus: false})\n    }\n\n    async aplicar(){\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            this.state.form.cv\n        );\n        console.log(this.state.form.cv);\n        axios.post(\"/upload\",formData, {})\n        .then(res => {\n            console.log(res.data.msg);\n            fetch('/insertAp', {\n                method: 'POST',\n                body: JSON.stringify({\n                    cui: this.state.form.cui,\n                    nombre: this.state.form.nombre,\n                    apellido: this.state.form.apellido,\n                    correo: this.state.form.correo,\n                    direccion: this.state.form.direccion,\n                    telefono:this.state.form.telefono,\n                    cv: res.data.msg,\n                    postu:this.state.date,\n                    depa:this.state.depa,\n                    puesto:this.state.puesto,\n                }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n                })\n                .then(res => res.json())\n                .then(data => {\n                    window.alert(data.msg);\n                })\n                .catch(err => console.error(err));\n        })\n        this.cerrarModalSelect();\n    }\n\n\n    mostrarModalSelect(dato){\n        this.setState({\n            depa: dato.idD,\n            puesto: dato.idP,\n            modalSelect: true\n        })\n    }\n    cerrarModalSelect(){\n        this.setState({modalSelect: false})\n    }\n    Sesion=()=>{\n        window.location.href='./login';\n    }\n\n    render(){\n        return <div> \n        <Main this={this}/>\n        <div className='xml'>\n            <h1>Puestos</h1>\n        </div>\n        <Search this = {this}/>    \n        <Select this = {this}/> \n        {(() => {\n            if(this.state.load == true){\n                return<Container>\n                <div class=\"load\">\n                <hr/><hr/><hr/><hr/>\n                </div>\n                </Container>\n                \n            }else{\n                return <Carrousel this = {this} />\n            }\n        })()}\n       \n        </div>\n    }\n}\n\nfunction Main(props){\n    return(\n        <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n            <input type=\"checkbox\"/>\n            <span></span>\n            <span></span>\n            <span></span>\n            <ul id=\"menu\">\n            <button onClick={()=>props.this.mostrarModalBuscar()}><li>Buscar Puesto</li></button>\n            <div className='boxer'/>\n            <button onClick={()=>props.this.Sesion()}><li>Iniciar Sesion</li></button>\n            </ul>\n            </div>\n        </nav>\n       \n    );\n}\n\nfunction Ifblock(props){\n    return (\n        <div class=\"card text-center\" style={{backgroundImage: `url(${props.e.Imagen})`, backgroundSize: 'cover'}}>\n        <div class=\"title\">\n        <h2>{props.e.Puesto}</h2>\n        </div>\n        <div class=\"option\">\n            <ul>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Salario: {props.e.Salario} </li>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Departamento: {props.e.Departamento} </li>                    \n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Categorias: </li>                    \n            <ul>\n                {\n                    props.e.Categorias.map(dsa =>\n                        <li> <i class=\"fa fa-times\" aria-hidden=\"true\"></i>{dsa.nombre} </li>\n\n                    )\n                }\n            </ul>\n            </ul>\n        </div>\n        <a onClick={()=>props.this.mostrarModalSelect(props.e)}>Seleccionar</a>\n\n        </div>\n    );\n}\n\nfunction Elseblock(props){\n    return (\n        <div class=\"card text-center\">\n        <div class=\"title\">\n        <h2>{props.e.Puesto}</h2>\n        </div>\n        <div class=\"option\">\n            <ul>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Salario: {props.e.Salario} </li>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Departamento: {props.e.Departamento} </li>                    \n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Categorias: </li>                    \n            <ul>\n                {\n                    props.e.Categorias.map(dsa =>\n                        <li> <i class=\"fa fa-times\" aria-hidden=\"true\"></i>{dsa.nombre} </li>\n\n                    )\n                }\n            </ul>\n            </ul>\n        </div>\n        <a onClick={()=>props.this.mostrarModalSelect(props.e)}>Seleccionar</a>\n\n        </div>\n    );\n}\n\nfunction Carrousel(props){\n    return(\n        <body>\n            <section>\n                {(() => {\n                    if(props.this.state.bus === true){\n                        return<Container>\n                        <Button\n                        className=\"btn btn-danger\"\n                        onClick={() => props.this.cerrarBusqueda()}\n                        >\n                        X\n                        </Button>\n                        <div class = \"box\"></div>\n                        </Container>\n                        \n                    }\n                })()}\n                <div class=\"container-fluid\">\n                <div class=\"container\">\n                <div class=\"row\">\n                {               \n                    props.this.state.tasks.map((e, index) => \n                        <div>\n                        {\n                            <div class=\"col-sm-4\">\n                            {(() => {\n                                if(e.Imagen != null){\n                                    return <Ifblock e = {e} this = {props.this}/>\n                                }else{\n                                    return <Elseblock e = {e} this = {props.this}/>\n                                }\n                            })()}\n                             <div class = \"box\"></div>\n                            </div>                \n                        } \n                        </div>\n                    )   \n                }\n                </div>\n                </div>\n                </div>   \n            </section> \n        </body> \n    );\n\n}\n\n\nfunction Search(props){\n    return(\n        <Modal isOpen={props.this.state.modalBuscar} fade={false}>\n            <ModalHeader>\n            <div><h3>Buscar</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"puesto\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Salario: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"salario\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Categoria\n                </label>\n                <Dropdown \n                name = \"rol\" \n                options = {props.this.state.catego}\n                onChange={props.this.handleChangeC}\n                placeholder=\"--\" \n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Departamento\n                </label>\n                <Dropdown \n                name = \"depa\" \n                options={props.this.state.depas}\n                onChange={props.this.handleChangeD}\n                placeholder=\"--\" />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.buscar()}\n                >\n                Buscar\n                </Button>\n                <Button\n                className=\"btn btn-danger\"\n                onClick={() => props.this.cerrarModalBuscar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n            </Modal>\n    );\n}\n\n\nfunction Select(props){\n    return(\n        <Modal isOpen={props.this.state.modalSelect} fade={false}>\n        <ModalHeader>\n        <div><h3>Aplicar para puesto</h3></div>\n        </ModalHeader>\n        <ModalBody>\n            <FormGroup>\n            <label>\n                CUI: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"cui\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Nombres: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"nombre\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Apellidos: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"apellido\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Correo: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"correo\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Direccion \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"direccion\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            <FormGroup>\n            <label>\n                Telefono: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"telefono\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                CV: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"cv\"\n                type=\"file\"\n                multiple={false}\n                accept=\".pdf\"\n                onChange={props.this.handleChangeF}\n            />\n            </FormGroup>\n            </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n            <Button\n            color=\"primary\"\n            onClick={() => props.this.aplicar()}\n            >\n            Aplicar\n            </Button>\n            <Button\n            className=\"btn btn-danger\"\n            onClick={() => props.this.cerrarModalSelect()}\n            >\n            Cancelar\n            </Button>\n        </ModalFooter>\n        </Modal>\n    );\n}\n\n\nexport default guest;\n","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js",["38","39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":10,"column":5,"nodeType":"47","messageId":"48","endLine":10,"endColumn":10},{"ruleId":"49","severity":1,"message":"50","line":247,"column":32,"nodeType":"51","messageId":"52","endLine":247,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":303,"column":9,"nodeType":"55","endLine":303,"endColumn":65},{"ruleId":"53","severity":1,"message":"54","line":330,"column":9,"nodeType":"55","endLine":330,"endColumn":65},{"ruleId":"49","severity":1,"message":"50","line":125,"column":37,"nodeType":"51","messageId":"52","endLine":125,"endColumn":39},{"ruleId":"49","severity":1,"message":"50","line":127,"column":43,"nodeType":"51","messageId":"52","endLine":127,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":351,"column":40,"nodeType":"51","messageId":"52","endLine":351,"endColumn":42},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]