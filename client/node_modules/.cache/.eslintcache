[{"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js":"1","/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js":"2","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js":"3","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js":"4","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js":"5","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js":"6","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js":"7","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reclutador.js":"8","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Applicant.js":"9","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reviewer.js":"10","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/coordinator.js":"11","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/socket.js":"12","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Chat.js":"13"},{"size":192,"mtime":1634671114320,"results":"14","hashOfConfig":"15"},{"size":1389,"mtime":1635534794494,"results":"16","hashOfConfig":"15"},{"size":16162,"mtime":1635450338995,"results":"17","hashOfConfig":"15"},{"size":3485,"mtime":1635466007222,"results":"18","hashOfConfig":"15"},{"size":220,"mtime":1634514982882,"results":"19","hashOfConfig":"15"},{"size":18978,"mtime":1635988270681,"results":"20","hashOfConfig":"15"},{"size":19669,"mtime":1635375032994,"results":"21","hashOfConfig":"15"},{"size":17579,"mtime":1635454751698,"results":"22","hashOfConfig":"15"},{"size":31129,"mtime":1635560097069,"results":"23","hashOfConfig":"15"},{"size":25272,"mtime":1635559047605,"results":"24","hashOfConfig":"15"},{"size":15978,"mtime":1635479386560,"results":"25","hashOfConfig":"15"},{"size":82,"mtime":1635550251993,"results":"26","hashOfConfig":"15"},{"size":2721,"mtime":1635562556819,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1393peg",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js",[],["60","61"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js",["62","63"],"import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport { Route } from \"wouter\";\nimport Guest from './components/guest';\nimport Login from './components/login';\nimport AdminSystem from \"./components/AdminSystem\";\nimport AdminUser from \"./components/AdminUser\";\nimport Reclutador from \"./components/reclutador\";\nimport Applicant from \"./components/Applicant\";\nimport Reviewer from \"./components/reviewer\";\nimport Coordinador from './components/coordinator';\n\nfunction App() {\n\n  const [auth, SetAuth] = useState();\n\n  return( \n    <Router>\n      <Switch>\n        <Route path= \"/login\">\n          <Login/>\n        </Route>\n        <Route path= \"/Applicant/:id\">\n          {params => <Applicant id={params.id} />}\n        </Route>\n        <Route path= \"/Coordinador/:id\">\n          {params => <Coordinador id={params.id} />}\n        </Route>\n        <Route path= \"/reviewer/:id\">\n          {params => <Reviewer id={params.id} />}\n        </Route>\n        <Route path= \"/reclutar/:id\">\n          {params => <Reclutador id={params.id} />}\n        </Route>\n        <Route path=\"/AdminSystem\">\n          <AdminSystem />\n        </Route>\n        <Route path=\"/AdminUser\">\n          <AdminUser/>\n        </Route>\n        <Route path=\"/\">\n          <Guest/>\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js",["64","65"],"import React, { Component } from 'react';\nimport '../styles/guest.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {getCurrentDate} from '../utils/date'\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\n\nimport {\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\n\nclass guest extends Component{\n\n    constructor() {\n        super();\n        this.state = {\n            tasks: [],\n            copy: [],\n            modalBuscar: false,\n            modalSelect: false,\n            depas: [],\n            catego: [],\n            form:{\n                cui:'',\n                nombre: '',\n                apellido: '',\n                correo: '',\n                direccion: '',\n                telefono: '',\n                cv: ''\n            },\n            search: {\n                puesto: null,\n                salario: null,\n                categoria: null,\n                depa: null\n            },\n            load: true,\n            load2: false,\n            bus: false,\n            file: '',\n            depa: '',\n            puesto: '',\n            date : getCurrentDate()\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeF = this.handleChangeF.bind(this);\n        this.handleChangeS = this.handleChangeS.bind(this);\n        this.handleChangeD = this.handleChangeD.bind(this);\n        this.handleChangeC = this.handleChangeC.bind(this);\n        this.fetchTasks()\n        this.fetchdepa()\n        this.fetchCategorias()\n    }\n    fetchTasks() {\n        fetch('/guest')\n          .then(res => res.json())\n          .then(data => {\n            this.setState({tasks: data, copy: data});\n            this.setState({load: false})\n            console.log(this.state.tasks)\n        });\n        \n    }\n    fetchdepa() {\n        fetch('/depas')\n          .then(res => res.json())\n          .then(data => {\n            const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }\n            this.setState({depas: aux});\n        });\n    }\n    fetchCategorias() {\n        fetch('/catego')\n          .then(res => res.json())\n          .then(data => {\n            /*const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }*/\n            this.setState({catego: data});\n        });\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          form:{\n              ...this.state.form,\n              [name]: value\n          },\n        });\n    }\n\n    handleChangeF(e) {\n        this.setState({\n          form:{\n              ...this.state.form,\n              cv: e.target.files[0]\n          },\n        });\n    }\n\n    handleChangeD(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              depa: e.value\n          },\n        });\n    }\n    handleChangeC(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              categoria: e.value\n          },\n        });\n    }\n\n    handleChangeS(e) {\n        const { name, value } = e.target;\n        this.setState({\n          search:{\n              ...this.state.search,\n              [name]: value\n          },\n        });\n    }\n\n    buscar(){\n        console.log(this.state.search)\n        this.setState({load: true})\n        fetch('/searchGuest', {\n            method: 'POST',\n            body: JSON.stringify({\n                puesto: this.state.search.puesto,\n                salario: this.state.search.salario,\n                categoria: this.state.search.categoria,\n                depa: this.state.search.depa\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data});\n                this.setState({load: false});\n            })\n            .catch(err => console.error(err));\n        this.setState({bus: true, modalBuscar: false})\n        this.setState({\n            search:{\n                ...this.state.search,\n                puesto: null,\n                salario: null,\n                depa: null,\n                categoria: null\n            },\n          });\n\n    }\n    mostrarModalBuscar(){\n        this.setState({modalBuscar: true})\n    }\n    cerrarModalBuscar(){\n        this.setState({modalBuscar: false})\n        //this.fetchTasks();\n    }\n    cerrarBusqueda(){\n        this.setState({tasks: this.state.copy, bus: false})\n    }\n\n    aplicar(){\n        this.cerrarModalSelect();\n        this.setState({load2: true})\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            this.state.form.cv\n        );\n        console.log(this.state.form.cv);\n        axios.post(\"/upload\",formData, {})\n        .then(res => {\n            console.log(res.data.msg);\n            fetch('/insertAp', {\n                method: 'POST',\n                body: JSON.stringify({\n                    cui: this.state.form.cui,\n                    nombre: this.state.form.nombre,\n                    apellido: this.state.form.apellido,\n                    correo: this.state.form.correo,\n                    direccion: this.state.form.direccion,\n                    telefono:this.state.form.telefono,\n                    cv: res.data.msg,\n                    postu:this.state.date,\n                    depa:this.state.depa,\n                    puesto:this.state.puesto,\n                }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n                })\n                .then(res => res.json())\n                .then(data => {\n                    Swal.fire(\n                        data.msg\n                    )\n                    this.setState({load2: false})\n                })\n                .catch(err => console.error(err));\n            })\n        \n    \n    }\n\n\n    mostrarModalSelect(dato){\n        this.setState({\n            depa: dato.idD,\n            puesto: dato.idP,\n            modalSelect: true\n        })\n    }\n    cerrarModalSelect(){\n        this.setState({modalSelect: false})\n    }\n    Sesion=()=>{\n        window.location.href='./login';\n    }\n\n    render(){\n        return <div> \n        <Main this={this}/>\n        <div className='xml'>\n            <h1>Puestos</h1>\n        </div>\n        <Search this = {this}/>    \n        <Select this = {this}/> \n        {(() => {\n            if(this.state.load === true){\n                return<Container>\n                <div class=\"load\">\n                <hr/><hr/><hr/><hr/>\n                </div>\n                </Container>\n                \n            }else{\n                return <Carrousel this = {this} />\n            }\n        })()}\n        <Load this= {this}/>\n        </div>\n    }\n}\n\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\nfunction Main(props){\n    return(\n        <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n            <input type=\"checkbox\"/>\n            <span></span>\n            <span></span>\n            <span></span>\n            <ul id=\"menu\">\n            <button onClick={()=>props.this.mostrarModalBuscar()}><li>Buscar Puesto</li></button>\n            <div className='boxer'/>\n            <button onClick={()=>props.this.Sesion()}><li>Iniciar Sesion</li></button>\n            </ul>\n            </div>\n        </nav>\n       \n    );\n}\n\nfunction Ifblock(props){\n    return (\n        <div class=\"card text-center\" style={{backgroundImage: `url(${props.e.Imagen})`, backgroundSize: 'cover'}}>\n        <div class=\"title\">\n        <h2>{props.e.Puesto}</h2>\n        </div>\n        <div class=\"option\">\n            <ul>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Salario: {props.e.Salario} </li>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Departamento: {props.e.Departamento} </li>                    \n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Categorias: </li>                    \n            <ul>\n                {\n                    props.e.Categorias.map(dsa =>\n                        <li> <i class=\"fa fa-times\" aria-hidden=\"true\"></i>{dsa.nombre} </li>\n\n                    )\n                }\n            </ul>\n            </ul>\n        </div>\n        <a onClick={()=>props.this.mostrarModalSelect(props.e)}>Seleccionar</a>\n\n        </div>\n    );\n}\n\nfunction Elseblock(props){\n    return (\n        <div class=\"card text-center\">\n        <div class=\"title\">\n        <h2>{props.e.Puesto}</h2>\n        </div>\n        <div class=\"option\">\n            <ul>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Salario: {props.e.Salario} </li>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Departamento: {props.e.Departamento} </li>                    \n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Categorias: </li>                    \n            <ul>\n                {\n                    props.e.Categorias.map(dsa =>\n                        <li> <i class=\"fa fa-times\" aria-hidden=\"true\"></i>{dsa.nombre} </li>\n\n                    )\n                }\n            </ul>\n            </ul>\n        </div>\n        <a onClick={()=>props.this.mostrarModalSelect(props.e)}>Seleccionar</a>\n\n        </div>\n    );\n}\n\nfunction Carrousel(props){\n    return(\n        <body>\n            <section>\n                {(() => {\n                    if(props.this.state.bus === true){\n                        return<Container>\n                        <Button\n                        className=\"btn btn-danger\"\n                        onClick={() => props.this.cerrarBusqueda()}\n                        >\n                        X\n                        </Button>\n                        <div class = \"box\"></div>\n                        </Container>\n                        \n                    }\n                })()}\n                <div class=\"container-fluid\">\n                <div class=\"container\">\n                <div class=\"row\">\n                {               \n                    props.this.state.tasks.map((e, index) => \n                        <div>\n                        {\n                            <div class=\"col-sm-4\">\n                            {(() => {\n                                if(e.Imagen != null){\n                                    return <Ifblock e = {e} this = {props.this}/>\n                                }else{\n                                    return <Elseblock e = {e} this = {props.this}/>\n                                }\n                            })()}\n                             <div class = \"box\"></div>\n                            </div>                \n                        } \n                        </div>\n                    )   \n                }\n                </div>\n                </div>\n                </div>   \n            </section> \n        </body> \n    );\n\n}\n\n\nfunction Search(props){\n    return(\n        <Modal isOpen={props.this.state.modalBuscar} fade={false}>\n            <ModalHeader>\n            <div><h3>Buscar</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"puesto\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Salario: \n                </label>\n                <input \n                className=\"form-control\" \n                type=\"number\" \n                name=\"salario\" \n                onChange={props.this.handleChangeS} \n                step=\"1000\"></input>\n               \n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Categoria\n                </label>\n                <Dropdown \n                name = \"rol\" \n                options = {props.this.state.catego}\n                onChange={props.this.handleChangeC}\n                placeholder=\"--\" \n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Departamento\n                </label>\n                <Dropdown \n                name = \"depa\" \n                options={props.this.state.depas}\n                onChange={props.this.handleChangeD}\n                placeholder=\"--\" />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.buscar()}\n                >\n                Buscar\n                </Button>\n                <Button\n                className=\"btn btn-danger\"\n                onClick={() => props.this.cerrarModalBuscar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n            </Modal>\n    );\n}\n\n\nfunction Select(props){\n    return(\n        <Modal isOpen={props.this.state.modalSelect} fade={false}>\n        <ModalHeader>\n        <div><h3>Aplicar para puesto</h3></div>\n        </ModalHeader>\n        <ModalBody>\n            <FormGroup>\n            <label>\n                CUI: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"cui\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Nombres: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"nombre\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Apellidos: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"apellido\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Correo: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"correo\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Direccion \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"direccion\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n             </FormGroup>\n            <FormGroup>\n            <label>\n                Telefono: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"telefono\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                CV: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"cv\"\n                type=\"file\"\n                multiple={false}\n                onChange={props.this.handleChangeF}\n            />\n            </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n            <Button\n            color=\"primary\"\n            onClick={() => props.this.aplicar()}\n            >\n            Aplicar\n            </Button>\n            <Button\n            className=\"btn btn-danger\"\n            onClick={() => props.this.cerrarModalSelect()}\n            >\n            Cancelar\n            </Button>\n        </ModalFooter>\n        </Modal>\n    );\n}\n\n\nexport default guest;\n","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js",["66"],"import React, { Component } from \"react\";\nimport '../styles/login.css'\nimport Cookies from 'universal-cookie';\nimport {\n    Modal,\n} from \"reactstrap\";\nimport Swal from 'sweetalert2'\n\n\nconst cookies = new Cookies();\n\n\nclass login extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          user: '',\n          load2: false,\n          pass: '',\n          tasks: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.prob = this.prob.bind(this);\n    }\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          [name]: value\n        });\n    }\n    \n    prob(e) {\n        this.setState({load2: true})\n        e.preventDefault();\n        fetch('/loginn', {\n        method: 'POST',\n        body: JSON.stringify({\n            usuario: this.state.user,\n            pass: this.state.pass\n        }),\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            switch(data.Rol){\n                case \"Admin Sistema\":\n                    window.location.href=`./AdminSystem`;\n                    break;\n                case \"Admin Usuario\":\n                    window.location.href=\"./AdminUser\";\n                    break;\n                case \"Coordinador\":\n                    window.location.href=`./Coordinador/${data.id}`;\n                    break;\n                case \"Reclutador\":\n                    console.log(data.id)\n                    window.location.href=`./reclutar/${data.id}`;\n                    break;\n                case \"Revisor\":\n                    window.location.href=`./reviewer/${data.id}`;\n                    break;\n                case undefined:\n                    console.log(\"NADA\")\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: 'Usuario y/o Contraseña incorrecta',\n                      })\n                    this.setState({user: '', pass: '', load2:false});\n                    break;\n                case \"Aplicante\":\n                    window.location.href=`./Applicant/${data.id}`;\n                    break;\n                default:\n                    break;\n            }    \n        })\n        .catch(err => console.error(err));\n    }\n\n    render(){\n        return <div className=\"login\">\n            <div class=\"wrapper fadeInDown\">\n            <div id=\"formContent\">\n                <h2 class=\"active\"> Iniciar sesion </h2>\n                <div class=\"fadeIn first\">\n                </div>\n                <form onSubmit={this.prob}>\n                <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"user\" onChange={this.handleChange} value={this.state.user} placeholder=\"Usuario\" />\n                <input type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"pass\" onChange={this.handleChange} value={this.state.pass} placeholder=\"Contraseña\"/>\n                <input type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\"/>\n                </form>\n            </div>\n            </div>\n            <Load this= {this}/>\n        </div>\n    }\n}\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\nexport default login;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js",["67","68","69","70","71","72"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reclutador.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Applicant.js",["73"],"import React, { Component} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-dropdown/style.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\nimport Chat from \"./Chat\";\n\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\n\nclass Applicant extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.id,\n            tasks: [],\n            historial: [], \n            nombre: '',\n            Requisitos: [],\n            load2: true,\n            modalVer: false,\n            modalCargar: false,\n            modalCorregir: false,\n            modalVer2:false,\n            load: true,\n            data: {},\n            extra:{ formatos: [] },\n            extra2:{},\n            profile:{\n                nombre: '',\n                fecha: '',\n                apellido: '',\n                correo: '', \n                direccion: '',\n                telefono: '',\n                cv: '',\n                primera: '',\n                depa: '',\n                puestoID: '',\n                puesto: ''\n            },\n            chat: {},\n            nuevoCV: null,\n            arreglo: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        //this.handleChangeCo = this.handleChangeCo.bind(this);\n        this.handleChangeC = this.handleChangeC.bind(this);\n        this.fetchProfile();\n        this.fetchistorial();\n        this.fetchper();\n    }\n\n    fetchper(){\n        fetch('/revi', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({chat: data});\n            })\n            .catch(err => console.error(err));\n    }\n\n    cerrarSesion(){\n        window.location.href='../';\n    }\n\n    fetchProfile(){\n        fetch('/selectPr', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({profile: data});\n                this.fetchRequisitos(data.puestoID);\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchProfile2(){\n        fetch('/selectPr', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({profile: data, load2:false});\n            })\n            .catch(err => console.error(err));\n    }\n\n    Comprobar(){\n        console.log('KHE')\n        if(this.state.profile.primera === '1'){\n            this.setState({modalCargar: true, load2: false});\n        }else{\n            this.setState({load2:false});\n            this.Archivos();\n        }\n    }\n\n    fetchRequisitos(id){\n        fetch('/requisitos', {\n            method: 'POST',\n            body: JSON.stringify({\n                puesto: id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({Requisitos: data});\n                this.Comprobar()\n            })\n            .catch(err => console.error(err));\n    }\n    mostrarModalVer(){\n        this.setState({modalVer: true})\n    }\n\n    cerrarModalCargar(){\n        this.setState({modalCargar: false})\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          profile:{\n              ...this.state.profile,\n              [name]: value\n          },\n        });\n    }\n    Editar(){\n        this.setState({load2: true})\n        //if(this.state.nuevoCV ==  null) this.setState({nuevoCV: this.state.profile.cv});\n        fetch('/updateAp', {\n            method: 'PUT',\n            body: JSON.stringify({\n                cui: this.state.id,\n                nombre: this.state.profile.nombre,\n                apellido: this.state.profile.apellido,\n                correo: this.state.profile.correo,\n                direccion: this.state.profile.direccion,\n                telefono: this.state.profile.telefono,\n                cv: this.state.nuevoCV\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire(\n                    'Hecho!',\n                    data.msg,\n                    'success'\n                )\n                this.fetchProfile2();\n            })\n            .catch(err => console.error(err));\n        this.cerrarModalVer();\n        this.fetchProfile2();\n    }\n\n    cerrarModalVer(){\n        this.setState({modalVer: false});\n    }\n\n    hacerArreglo(formatos){\n        var aux = \"\"\n        var index = -1;\n        for(const requi of formatos){\n            index ++;\n            if(index !== 0){\n                aux += \",\"\n            }\n            aux += \".\"\n            aux += requi.formato\n        }\n        console.log(aux)\n        return aux;\n    }\n    DescargarCV(cv){\n        this.setState({load2: true})\n        fetch('/controller', {\n            method: 'POST',\n            body: JSON.stringify({\n                d:cv\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.blob())\n            .then((blob) => {\n                // Create blob link to download\n                const url = window.URL.createObjectURL(\n                  new Blob([blob]),\n                );\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute(\n                  'download',\n                  `${cv}`,\n                );\n                // Append to html link element page\n                document.body.appendChild(link);\n                // Start download\n                link.click();\n                this.setState({load2: false})\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            });\n    }\n\n    handleChangeC(e){\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            e.target.files[0]\n        );\n        this.setState({load2: true})\n        axios.post(\"/upload\",formData, {})\n        .then(res => {\n            this.setState({nuevoCV: res.data.msg, load2: false})\n        })\n    }\n    primera(){\n        fetch('/primera', {\n            method: 'PUT',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.Archivos()\n            })\n            .catch(err => console.error(err));\n        this.Archivos()\n    }\n\n    Cargar(){\n        this.setState({load2: true})\n        console.log(this.state.Requisitos);\n        for (const requi of this.state.Requisitos){\n            if(requi.obligatorio === '1' && requi.util == null){\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error',\n                    text: 'Requisitos obligatorios SIN CARGAR',\n                  })\n                this.setState({load2: false})\n                return;\n            }\n        }\n        for (const requi of this.state.Requisitos){\n            if(requi.util == null) continue;\n            fetch('/archivo', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ruta: requi.util,\n                    cui: this.state.id,\n                    prid: requi.id\n                }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n                })\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data)\n                })\n                .catch(err => console.error(err));\n        }\n        Swal.fire(\n            'Hecho!',\n            'Expediente enviado para revisar correctamente',\n            'success'\n        )\n        this.primera();\n        this.setState({modalCargar: false, load2:false})\n    }\n\n    handleChangeF(e, requi) {\n        console.log(e, requi)\n        this.setState({load2: true})\n        console.log(e.size)\n        if(e.size > requi.tamanio * 1048576){\n            Swal.fire({\n                icon: 'error',\n                title: 'Error',\n                text: `El archivo supera el limite del tamaño permitido (${requi.tamanio})MB`,\n            })\n            this.setState({load2: false})\n            return;\n        }\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            e\n        );\n        axios.post(\"/uploadExp\",formData, {})\n        .then(res => {\n            requi.util = res.data.msg\n            this.setState({load2: false})\n        })\n    }\n\n    Archivos(){\n        fetch('/selectExp', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                for(const i of data){\n                    if(i.aceptado === '0'){\n                        Swal.fire({\n                            position: 'top-end',\n                            icon: 'warning',\n                            title: 'Tiene documentos que corregir',\n                            showConfirmButton: false,\n                            timer: 4000\n                          })\n                        break;\n                    }\n                }\n                this.setState({tasks: data, load: false});\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchistorial(){\n        fetch('/selectHi', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({historial: data});\n            })\n            .catch(err => console.error(err));\n    }\n\n    descargarExp(cv){\n        this.setState({load2: true})\n        fetch('/controller2', {\n            method: 'POST',\n            body: JSON.stringify({\n                d:cv\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.blob())\n            .then((blob) => {\n                // Create blob link to download\n                const url = window.URL.createObjectURL(\n                  new Blob([blob]),\n                );\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute(\n                  'download',\n                  `${cv}`,\n                );\n                // Append to html link element page\n                document.body.appendChild(link);\n                // Start download\n                link.click();\n                this.setState({load2: false})\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            });\n    }\n\n    mostrarmodalVer2(){\n        this.setState({modalVer2: true});\n    }\n    cerrarModalVer2(){\n        this.setState({modalVer2: false})\n    }\n\n    handleChangeCo(e){\n        this.setState({load2: true})\n        console.log(e.size)\n        if(e.size > this.state.extra.tamanio * 1048576){\n            Swal.fire({\n                icon: 'error',\n                title: 'Error',\n                text: `El archivo supera el limite del tamaño permitido (${this.state.extra.tamanio})MB`,\n            })\n            this.setState({load2: false})\n            return;\n        }\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            e\n        );\n        axios.post(\"/uploadExp\",formData, {})\n        .then(res => {\n            this.state.extra.util = res.data.msg\n            this.setState({load2: false})\n        })\n    }\n\n    mostrarModalCorregir(dato){\n        for(const i of this.state.Requisitos){\n            if(dato.requisitoid === i.requisitoid){\n                this.setState({extra: i, extra2: dato, modalCorregir: true});\n                break;\n            }\n        }\n    }\n\n    cerrarModalCorregir(){\n        this.setState({modalCorregir: false});\n    }\n\n    Corregir(){\n        this.setState({modalCorregir: false, load:true})\n        fetch('/corregir', {\n            method: 'PUT',\n            body: JSON.stringify({\n                cui: this.state.id,\n                archivoid: this.state.extra2.id,\n                ruta: this.state.extra.util\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire(\n                    'Hecho!',\n                    'Correcion Subida',\n                    'success'\n                )\n                this.Archivos();\n            })\n            .catch(err => console.error(err));\n    }\n\n    render(){\n        return <div>\n            <Menu this = {this}/>\n            <Ver2 this = {this}/>\n            <Ver this = {this}/>\n            <Expediente this = {this} /> \n            <Load this= {this}/>\n            <Corregir this = {this}/>\n            <div className=\"box\"></div>\n            <Container>\n               <Tabs>\n                   <TabList>\n                       <Tab>Expediente</Tab>\n                       <Tab>Historial</Tab>\n                       <Tab>CHAT</Tab>\n                   </TabList>\n                   <TabPanel>\n                   {(() => {\n                        if(this.state.load === true){\n                            return<Container>\n                            <div class=\"load\">\n                            <hr/><hr/><hr/><hr/>\n                            </div>\n                            </Container>\n                        }else{\n                            return (\n                                <Fethc this = {this}/>\n                            ); \n                        }\n                    })()}\n                   </TabPanel>\n                   <TabPanel>\n                       <Historial this = {this}/>\n                   </TabPanel>\n                   <TabPanel>\n                       <Chat nombre={this.state.profile.nombre} other = {this.state.chat.nombre}/>\n                   </TabPanel>\n               </Tabs>\n            </Container>\n            \n        </div>\n    }\n\n}\n\nfunction Expediente(props){\n    return(\n        <Modal isOpen={props.this.state.modalCargar} fade={false}>\n            <ModalHeader>\n            <div><h3>Cargar Expediente para el puesto {props.this.state.profile.puesto}</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    DATOS \n                </label>\n                <Button style={{float: 'right'}}\n                color=\"primary\"\n                onClick={() => props.this.mostrarModalVer()}\n                >\n                Ver\n                </Button>  \n                </FormGroup>\n                {\n                    props.this.state.Requisitos.map(requi =>\n                        <div>\n                        {\n                            <FormGroup>\n                            <label>\n                                {(() => {\n                                    if(requi.obligatorio === '1'){\n                                        return<text style={{ color: 'red' }}>* </text>\n                                    }\n                                })()}\n                                {requi.requisito}({props.this.hacerArreglo(requi.formatos)}): \n                            </label>\n                            <input\n                                className=\"form-control\"\n                                name={requi.requisito}\n                                type=\"file\"\n                                max-size={requi.tamanio * 1024}\n                                multiple={false}\n                                accept={props.this.hacerArreglo(requi.formatos)}\n                                onChange={e => props.this.handleChangeF(e.target.files[0], requi)}\n                                required\n                            />\n                            </FormGroup>\n                        }\n                        </div>\n                    )\n                }\n                <i>* Requisito Obligatorio</i>\n            </ModalBody>\n            <ModalFooter>  \n            <Button\n                color=\"success\"\n                onClick={() => props.this.Cargar()}\n                >\n                 Cargar Expediente\n            </Button>      \n\n            </ModalFooter>\n        </Modal> \n    );\n}\n\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\n\nfunction Menu(props){\n    return (<div> \n        <nav role=\"navigation\">\n        <div id=\"menuToggle\">\n        <input type=\"checkbox\"/>\n        <span></span>\n        <span></span>\n        <span></span>\n        <ul id=\"menu\">\n        <button onClick={()=>props.this.mostrarmodalVer2()}><li>Mis Datos</li></button>\n        <div className=\"boxer\"></div>\n        <button onClick={()=>props.this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n        </ul>\n        </div>\n        </nav>\n         <div className='xml'>\n         <h2>Bienvenido {props.this.state.profile.nombre} {props.this.state.profile.apellido}</h2>\n         </div>\n         </div>\n    );\n}\n\n\nfunction Ver(props) {\n    return(\n        <Modal isOpen={props.this.state.modalVer} fade={false}>\n            <ModalHeader>\n            <div><h3>Aplicante</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    CUI: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"id\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.id}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"nombre\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.nombre}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Apellido: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"apellido\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.apellido}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"correo\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.correo}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Direccion: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"direccion\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.direccion}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Telefono: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.telefono}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    CV: \n                </label>\n                <Button style={{float: 'right'}}\n                color=\"primary\"\n                onClick={() => props.this.DescargarCV(props.this.state.profile.cv)}\n                >\n                    {props.this.state.profile.cv}\n                </Button> \n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Cargar nuevamente CV\n                </label>\n                <input\n                className=\"form-control\"\n                name=\"cv\"\n                type=\"file\"\n                multiple={false}\n                accept=\".pdf\"\n                onChange={props.this.handleChangeC}\n                />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>  \n            <Button\n                color=\"primary\"\n                onClick={() => props.this.Editar()}\n                >\n                Editar Datos\n            </Button>      \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalVer()}\n            >\n            Cancelar\n            </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n\n\nfunction Fethc(props) {\n    return(\n        <Container>\n        <div className='xml'>\n         <h3>Requisitos para {props.this.state.profile.puesto}</h3>\n         </div>\n         <div className=\"box\"></div>\n        <Table>\n            <thead>\n            <tr>\n                <th>Requisito</th>\n                <th>Estado</th>\n                <th>Ver</th>\n            </tr>\n            </thead>\n            {props.this.state.tasks.map((dato) => (\n                (() => {\n                    if(dato.aceptado === '1'){\n                        return <Ifyes dato = {dato} this= {props.this}/>\n                    }else if(dato.aceptado === '0'){\n                        return <Elsen dato = {dato} this = {props.this}/>\n                    }else{\n                        return <Nothing dato = {dato} this = {props.this}/>\n                    }\n                })()\n            ))}\n        </Table>\n        </Container>\n    );\n}\n\nfunction Ifyes(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#81C784\"}}>\n        <tr key={dato.id} >\n        <td>{dato.requisito}</td>\n        <td>Aceptado</td>\n        <td>\n            <Button\n            onClick={() => props.this.descargarExp(dato.archivo)}>\n            Descargar\n            </Button>\n        </td>\n        </tr>\n        </tbody>\n    );    \n}\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id} >\n        <td>{dato.requisito}</td>\n        <td>Rechazado</td>\n        <td>\n            <Button\n            onClick={() => props.this.descargarExp(dato.archivo)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalCorregir(dato)}>\n            Corregir\n            </Button>\n        </td>\n        </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing(props) {\n    var dato = props.dato;\n    return(\n        <tbody >\n        <tr key={dato.id} >\n        <td>{dato.requisito}</td>\n        <td>Sin revisar</td>\n        <td>\n            <Button\n            onClick={() => props.this.descargarExp(dato.archivo)}>\n            Descargar\n            </Button>\n        </td>\n        </tr>\n        </tbody>\n    );   \n}\n\nfunction Corregir(props){\n    return(\n        <Modal isOpen={props.this.state.modalCorregir} fade={false}>\n            <ModalHeader>\n            <div><h3>Corregir </h3></div>\n            </ModalHeader>\n            <ModalBody>\n                    <FormGroup>\n                        <label>\n                            {props.this.state.extra.requisito}({props.this.hacerArreglo(props.this.state.extra.formatos)}): \n                        </label>\n                        <input\n                            className=\"form-control\"\n                            type=\"file\"\n                            multiple={false}\n                            accept={props.this.hacerArreglo(props.this.state.extra.formatos)}\n                            onChange={e => props.this.handleChangeCo(e.target.files[0])}\n                        />\n                    </FormGroup>\n            </ModalBody>\n            <ModalFooter>     \n            <Button\n            color=\"success\"\n            onClick={() => props.this.Corregir()}\n            >\n            Corregir\n            </Button> \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalCorregir()}\n            >\n            Cerrar\n            </Button>\n            </ModalFooter>\n        </Modal> \n    );\n}\n\nfunction Historial(props){\n    return (\n        <Container>\n        <div className='xml'>\n         <h3>Historial</h3>\n         </div>\n         <div className=\"box\"></div>\n        <Table>\n            <thead>\n            <tr>\n                <th>Requisito</th>\n                <th>Motivo</th>\n                <th>Fecha de rechazo</th>\n                <th>Ver</th>\n            </tr>\n            </thead>\n            {props.this.state.historial.map((dato) => (\n\n                <tbody>\n                <tr key={dato.id} >\n                <td>{dato.requisito}</td>\n                <td>{dato.motivo}</td>\n                <td>{dato.fecha}</td>\n                <td>\n                    <Button\n                    onClick={() => props.this.descargarExp(dato.ruta)}>\n                    Descargar\n                    </Button>\n                </td>\n                </tr>\n                </tbody>\n            ))}\n        </Table>\n        </Container>  \n    );\n}\n\n\nfunction Ver2(props) {\n    return(\n        <Modal isOpen={props.this.state.modalVer2} fade={false}>\n            <ModalHeader>\n            <div><h3>Aplicante</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    CUI: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"id\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.id}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"nombre\"\n                    type=\"text\"\n                    readOnly\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.nombre}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Apellido: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"apellido\"\n                    type=\"text\"\n                    readOnly\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.apellido}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"correo\"\n                    type=\"text\"\n                    readOnly\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.correo}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Direccion: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"direccion\"\n                    type=\"text\"\n                    readOnly\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.direccion}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Telefono: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n                    onChange={props.this.handleChange}\n                    value = {props.this.state.profile.telefono}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    CV: \n                </label>\n                <Button style={{float: 'right'}}\n                color=\"primary\"\n                onClick={() => props.this.DescargarCV(props.this.state.profile.cv)}\n                >\n                    {props.this.state.profile.cv}\n                </Button> \n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>      \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalVer2()}\n            >\n            Cerrar\n            </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n\nexport default Applicant;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reviewer.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/coordinator.js",["74"],"import React, { Component, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-dropdown/style.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\nimport Swal from 'sweetalert2'\n\n\nclass Coordinador extends Component{\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            id: this.props.id,\n            tasks: [],\n            tasks2: [],\n            load2: false,\n            modalVer: false,\n            load: true,\n            depa:{\n                id: '',\n                nombre: ''\n            },\n            profile:{},\n            data: {}\n        };\n        this.fetchDepas();\n    }\n\n\n    fetchDepas(){\n        fetch('/depasr', {\n            method: 'POST',\n            body: JSON.stringify({\n                per: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({depa:{\n                    id: data.id,\n                    nombre : data.nombre\n                }});\n                console.log(data.id)\n                this.fetchSelect(data.id)\n                this.fetchSelect2(data.id)\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchSelect(id){\n        fetch('/selectPl', {\n            method: 'POST',\n            body: JSON.stringify({\n                depa: id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data});\n                console.log(data);\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchSelect2(id){\n        console.log(this.state.depa)\n        fetch('/selectPl2', {\n            method: 'POST',\n            body: JSON.stringify({\n                depa: id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks2: data, load: false});\n                console.log(data);\n            })\n            .catch(err => console.error(err));\n    }\n\n\n    cerrarSesion(){\n        window.location.href='../';\n    }\n\n    mostrarModalVer(dato){\n        this.setState({modalVer: true, data:dato})\n    }\n    cerrarModalVer(){\n        this.setState({modalVer: false})\n    }\n\n    DescargarCV(cv){\n        this.setState({load2: true})\n        fetch('/controller', {\n            method: 'POST',\n            body: JSON.stringify({\n                d:cv\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.blob())\n            .then((blob) => {\n                // Create blob link to download\n                const url = window.URL.createObjectURL(\n                  new Blob([blob]),\n                );\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute(\n                  'download',\n                  `${cv}`,\n                );\n                // Append to html link element page\n                document.body.appendChild(link);\n                // Start download\n                link.click();\n                this.setState({load2: false})\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            });\n    }\n\n    Aceptar(data){\n        this.setState({load: true})\n        fetch('/insertPl', {\n            method: 'POST',\n            body: JSON.stringify({\n                cui: data.cui,\n                correo: data.correo,\n                name: data.nombre,\n                depa: this.state.depa.id,\n                dp: data.dpid\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire(\n                    'Hecho!',\n                    data.msg,\n                    'success'\n                )\n                this.fetchSelect(this.state.depa.id); \n                this.fetchSelect2(this.state.depa.id); \n            })\n            .catch(err => console.error(err));   \n    }\n\n    rechazar(data){\n        this.setState({load2: true})\n        fetch('/updatePl', {\n            method: 'PUT',\n            body: JSON.stringify({\n                cui: data.cui,\n                estado: '0'\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire(\n                    'Hecho!',\n                    data.msg,\n                    'success'\n                )\n                this.fetchSelect(this.state.depa.id); \n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n    }\n\n    despedir(data){\n        this.setState({load2: true})\n        fetch('/updatePl', {\n            method: 'PUT',\n            body: JSON.stringify({\n                cui: data.cui,\n                estado: '3'\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire(\n                    'Hecho!',\n                    data.msg,\n                    'info'\n                )\n                this.fetchSelect2(this.state.depa.id); \n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));   \n    }\n\n    render(){\n        return <div>\n            <Menu this = {this}/>\n            <Ver this = {this}/>\n            <div className=\"box\"></div>\n            <Container>\n            <Tabs>\n                   <TabList>\n                       <Tab>Contratar</Tab>\n                       <Tab>Planilla</Tab>\n                   </TabList>\n                   <TabPanel>\n                   {(() => {\n                        if(this.state.load === true){\n                            return<Container>\n                            <div class=\"load\">\n                            <hr/><hr/><hr/><hr/>\n                            </div>\n                            </Container>\n                        }else{\n                            return (\n                                <div>\n                                     <div className=\"xml\">\n                                         <h3>Aplicantes para contratar</h3>\n                                     </div>\n                                     <div className=\"box\"></div>\n                                     <Fethc this = {this}/>\n                                </div>\n                            ); \n                        }\n                    })()}\n                   </TabPanel>\n                   <TabPanel>\n                   {(() => {\n                        if(this.state.load === true){\n                            return<Container>\n                            <div class=\"load\">\n                            <hr/><hr/><hr/><hr/>\n                            </div>\n                            </Container>\n                        }else{\n                            return (\n                                <div>\n                                     <div className=\"xml\">\n                                         <h3>Personal Contratado</h3>\n                                     </div>\n                                     <div className=\"box\"></div>\n                                     <Fethc2 this = {this}/>\n                                </div>\n                            ); \n                        }\n                    })()}\n                   </TabPanel>\n               </Tabs>\n            </Container>\n           <Load this= {this}/>\n        </div>\n    }\n\n}\n\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\nfunction Menu(props){\n    return ( <div>\n        <nav role=\"navigation\">\n        <div id=\"menuToggle\">\n        <input type=\"checkbox\"/>\n        <span></span>\n        <span></span>\n        <span></span>\n        <ul id=\"menu\">\n        <button onClick={()=>props.this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n        </ul>\n        </div>\n        </nav>\n        <div className='xml'>\n        <h2>Coordinador del departamento: {props.this.state.depa.nombre}</h2>\n        </div>\n        </div>\n    );\n}\n\nfunction Ver(props) {\n    return(\n        <Modal isOpen={props.this.state.modalVer} fade={false}>\n            <ModalHeader>\n            <div><h3>Aplicante</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    CUI: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"id\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.cui}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"nombre\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.nombre}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Apellido: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"apellido\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.apellido}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"correo\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.correo}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Direccion: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"direccion\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.direccion}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Telefono: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.telefono}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    CV: \n                </label>\n                <Button style={{float: 'right'}}\n                color=\"primary\"\n                onClick={() => props.this.DescargarCV(props.this.state.data.cv)}\n                >\n                    {props.this.state.data.cv}\n                </Button> \n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>      \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalVer()}\n            >\n            Cerrar\n            </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n\nfunction Fethc(props) {\n    return(\n        <Container>\n        <br />\n        <Table>\n            <thead>\n            <tr>\n                <th>Nombre Completo</th>\n                <th>Puesto</th>\n                <th>Datos Personales</th>\n                <th>Contratar</th>\n            </tr>\n            </thead>\n\n            {props.this.state.tasks.map((dato) => (\n                (() => {\n                    if(dato.planilla === '0'){\n                        return <Elsen dato = {dato} this = {props.this}/>\n                    }else if(dato.planilla === '2'){\n                        return <Nothing dato = {dato} this = {props.this}/>\n                    }\n                })()\n            ))}\n\n        </Table>\n        </Container>\n    );\n}\n\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id}>\n        <td>{dato.nombre} {dato.apellido}</td>\n        <td>{dato.puesto}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing(props) {\n    var dato = props.dato;\n    return(\n        <tbody >\n        <tr key={dato.id} >\n        <td>{dato.nombre} {dato.apellido}</td>\n        <td>{dato.puesto}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}>\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );   \n}\n\nfunction Fethc2(props) {\n    return(\n        <Container>\n        <br />\n        <Table>\n            <thead>\n            <tr>\n                <th>Nombre Completo</th>\n                <th>Puesto</th>\n                <th>Datos Personales</th>\n                <th></th>\n            </tr>\n            </thead>\n\n            {props.this.state.tasks2.map((dato) => (\n                (() => {\n                    if(dato.planilla === '3'){\n                        return <Elsen2 dato = {dato} this = {props.this}/>\n                    }else if(dato.planilla === '1'){\n                        return <Nothing2 dato = {dato} this = {props.this}/>\n                    }\n                })()\n            ))}\n        </Table>\n        </Container>\n    );\n}\n\n\nfunction Elsen2(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id}>\n        <td>{dato.nombre} {dato.apellido}</td>\n        <td>{dato.puesto}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing2(props) {\n    var dato = props.dato;\n    return(\n        <tbody >\n        <tr key={dato.id} >\n        <td>{dato.nombre} {dato.apellido}</td>\n        <td>{dato.puesto}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}>\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button color=\"danger\" \n            onClick={()=> props.this.despedir(dato)}>\n            Despedir</Button>\n        </td>\n        </tr>\n        </tbody>\n    );   \n}\n\nexport default Coordinador;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/socket.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Chat.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":18,"column":10,"nodeType":"81","messageId":"82","endLine":18,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":18,"column":16,"nodeType":"81","messageId":"82","endLine":18,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":321,"column":9,"nodeType":"86","endLine":321,"endColumn":65},{"ruleId":"84","severity":1,"message":"85","line":348,"column":9,"nodeType":"86","endLine":348,"endColumn":65},{"ruleId":"79","severity":1,"message":"87","line":10,"column":7,"nodeType":"81","messageId":"82","endLine":10,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":268,"column":25,"nodeType":"86","messageId":"90","endLine":268,"endColumn":51},{"ruleId":"88","severity":1,"message":"91","line":271,"column":25,"nodeType":"86","messageId":"90","endLine":271,"endColumn":51},{"ruleId":"88","severity":1,"message":"92","line":274,"column":25,"nodeType":"86","messageId":"90","endLine":274,"endColumn":51},{"ruleId":"88","severity":1,"message":"93","line":277,"column":25,"nodeType":"86","messageId":"90","endLine":277,"endColumn":51},{"ruleId":"88","severity":1,"message":"94","line":280,"column":25,"nodeType":"86","messageId":"90","endLine":280,"endColumn":51},{"ruleId":"88","severity":1,"message":"95","line":283,"column":25,"nodeType":"86","messageId":"90","endLine":283,"endColumn":51},{"ruleId":"96","severity":1,"message":"97","line":468,"column":13,"nodeType":"98","messageId":"99","endLine":468,"endColumn":29},{"ruleId":"79","severity":1,"message":"100","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'SetAuth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'cookies' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Report_1 must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Report_2 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_3 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_4 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_5 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_6 must be in PascalCase or SCREAMING_SNAKE_CASE","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]