[{"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js":"1","/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js":"2","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js":"3","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js":"4","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js":"5","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js":"6","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js":"7","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reclutador.js":"8"},{"size":192,"mtime":1634671114320,"results":"9","hashOfConfig":"10"},{"size":783,"mtime":1634881016257,"results":"11","hashOfConfig":"10"},{"size":16102,"mtime":1634957261616,"results":"12","hashOfConfig":"10"},{"size":3552,"mtime":1635010371633,"results":"13","hashOfConfig":"10"},{"size":220,"mtime":1634514982882,"results":"14","hashOfConfig":"10"},{"size":3103,"mtime":1634963591812,"results":"15","hashOfConfig":"10"},{"size":19264,"mtime":1634963590480,"results":"16","hashOfConfig":"10"},{"size":17828,"mtime":1634963593636,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1393peg",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js",[],["38","39"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js",["40","41","42","43"],"import React, { Component } from 'react';\nimport '../styles/guest.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {getCurrentDate} from '../utils/date'\nimport axios from 'axios';\n\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\nclass guest extends Component{\n\n    constructor() {\n        super();\n        this.state = {\n            tasks: [],\n            copy: [],\n            modalBuscar: false,\n            modalSelect: false,\n            depas: [],\n            catego: [],\n            form:{\n                cui:'',\n                nombre: '',\n                apellido: '',\n                correo: '',\n                direccion: '',\n                telefono: '',\n                cv: ''\n            },\n            search: {\n                puesto: null,\n                salario: null,\n                categoria: null,\n                depa: null\n            },\n            load: true,\n            load2: false,\n            bus: false,\n            file: '',\n            depa: '',\n            puesto: '',\n            date : getCurrentDate()\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeF = this.handleChangeF.bind(this);\n        this.handleChangeS = this.handleChangeS.bind(this);\n        this.handleChangeD = this.handleChangeD.bind(this);\n        this.handleChangeC = this.handleChangeC.bind(this);\n        this.fetchTasks()\n        this.fetchdepa()\n        this.fetchCategorias()\n    }\n    fetchTasks() {\n        fetch('/guest')\n          .then(res => res.json())\n          .then(data => {\n            this.setState({tasks: data, copy: data});\n            this.setState({load: false})\n            console.log(this.state.tasks)\n        });\n        \n    }\n    fetchdepa() {\n        fetch('/depas')\n          .then(res => res.json())\n          .then(data => {\n            const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }\n            this.setState({depas: aux});\n        });\n    }\n    fetchCategorias() {\n        fetch('/catego')\n          .then(res => res.json())\n          .then(data => {\n            /*const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }*/\n            this.setState({catego: data});\n        });\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          form:{\n              ...this.state.form,\n              [name]: value\n          },\n        });\n    }\n\n    handleChangeF(e) {\n        this.setState({\n          form:{\n              ...this.state.form,\n              cv: e.target.files[0]\n          },\n        });\n    }\n\n    handleChangeD(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              depa: e.value\n          },\n        });\n    }\n    handleChangeC(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              categoria: e.value\n          },\n        });\n    }\n\n    handleChangeS(e) {\n        const { name, value } = e.target;\n        this.setState({\n          search:{\n              ...this.state.search,\n              [name]: value\n          },\n        });\n    }\n\n    buscar(){\n        console.log(this.state.search)\n        this.setState({load: true})\n        fetch('/searchGuest', {\n            method: 'POST',\n            body: JSON.stringify({\n                puesto: this.state.search.puesto,\n                salario: this.state.search.salario,\n                categoria: this.state.search.categoria,\n                depa: this.state.search.depa\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data});\n                this.setState({load: false});\n            })\n            .catch(err => console.error(err));\n        this.setState({bus: true, modalBuscar: false})\n        this.setState({\n            search:{\n                ...this.state.search,\n                puesto: null,\n                salario: null,\n                depa: null,\n                categoria: null\n            },\n          });\n\n    }\n    mostrarModalBuscar(){\n        this.setState({modalBuscar: true})\n    }\n    cerrarModalBuscar(){\n        this.setState({modalBuscar: false})\n        //this.fetchTasks();\n    }\n    cerrarBusqueda(){\n        this.setState({tasks: this.state.copy, bus: false})\n    }\n\n    aplicar(){\n        this.cerrarModalSelect();\n        this.setState({load2: true})\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            this.state.form.cv\n        );\n        console.log(this.state.form.cv);\n        axios.post(\"/upload\",formData, {})\n        .then(res => {\n            console.log(res.data.msg);\n            fetch('/insertAp', {\n                method: 'POST',\n                body: JSON.stringify({\n                    cui: this.state.form.cui,\n                    nombre: this.state.form.nombre,\n                    apellido: this.state.form.apellido,\n                    correo: this.state.form.correo,\n                    direccion: this.state.form.direccion,\n                    telefono:this.state.form.telefono,\n                    cv: res.data.msg,\n                    postu:this.state.date,\n                    depa:this.state.depa,\n                    puesto:this.state.puesto,\n                }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n                })\n                .then(res => res.json())\n                .then(data => {\n                    window.alert(data.msg);\n                    this.setState({load2: false})\n                })\n                .catch(err => console.error(err));\n            })\n        \n    \n    }\n\n\n    mostrarModalSelect(dato){\n        this.setState({\n            depa: dato.idD,\n            puesto: dato.idP,\n            modalSelect: true\n        })\n    }\n    cerrarModalSelect(){\n        this.setState({modalSelect: false})\n    }\n    Sesion=()=>{\n        window.location.href='./login';\n    }\n\n    render(){\n        return <div> \n        <Main this={this}/>\n        <div className='xml'>\n            <h1>Puestos</h1>\n        </div>\n        <Search this = {this}/>    \n        <Select this = {this}/> \n        {(() => {\n            if(this.state.load == true){\n                return<Container>\n                <div class=\"load\">\n                <hr/><hr/><hr/><hr/>\n                </div>\n                </Container>\n                \n            }else{\n                return <Carrousel this = {this} />\n            }\n        })()}\n        <Load this= {this}/>\n        </div>\n    }\n}\n\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\nfunction Main(props){\n    return(\n        <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n            <input type=\"checkbox\"/>\n            <span></span>\n            <span></span>\n            <span></span>\n            <ul id=\"menu\">\n            <button onClick={()=>props.this.mostrarModalBuscar()}><li>Buscar Puesto</li></button>\n            <div className='boxer'/>\n            <button onClick={()=>props.this.Sesion()}><li>Iniciar Sesion</li></button>\n            </ul>\n            </div>\n        </nav>\n       \n    );\n}\n\nfunction Ifblock(props){\n    return (\n        <div class=\"card text-center\" style={{backgroundImage: `url(${props.e.Imagen})`, backgroundSize: 'cover'}}>\n        <div class=\"title\">\n        <h2>{props.e.Puesto}</h2>\n        </div>\n        <div class=\"option\">\n            <ul>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Salario: {props.e.Salario} </li>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Departamento: {props.e.Departamento} </li>                    \n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Categorias: </li>                    \n            <ul>\n                {\n                    props.e.Categorias.map(dsa =>\n                        <li> <i class=\"fa fa-times\" aria-hidden=\"true\"></i>{dsa.nombre} </li>\n\n                    )\n                }\n            </ul>\n            </ul>\n        </div>\n        <a onClick={()=>props.this.mostrarModalSelect(props.e)}>Seleccionar</a>\n\n        </div>\n    );\n}\n\nfunction Elseblock(props){\n    return (\n        <div class=\"card text-center\">\n        <div class=\"title\">\n        <h2>{props.e.Puesto}</h2>\n        </div>\n        <div class=\"option\">\n            <ul>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Salario: {props.e.Salario} </li>\n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Departamento: {props.e.Departamento} </li>                    \n            <li> <i class=\"fa fa-check\" aria-hidden=\"true\"></i>Categorias: </li>                    \n            <ul>\n                {\n                    props.e.Categorias.map(dsa =>\n                        <li> <i class=\"fa fa-times\" aria-hidden=\"true\"></i>{dsa.nombre} </li>\n\n                    )\n                }\n            </ul>\n            </ul>\n        </div>\n        <a onClick={()=>props.this.mostrarModalSelect(props.e)}>Seleccionar</a>\n\n        </div>\n    );\n}\n\nfunction Carrousel(props){\n    return(\n        <body>\n            <section>\n                {(() => {\n                    if(props.this.state.bus === true){\n                        return<Container>\n                        <Button\n                        className=\"btn btn-danger\"\n                        onClick={() => props.this.cerrarBusqueda()}\n                        >\n                        X\n                        </Button>\n                        <div class = \"box\"></div>\n                        </Container>\n                        \n                    }\n                })()}\n                <div class=\"container-fluid\">\n                <div class=\"container\">\n                <div class=\"row\">\n                {               \n                    props.this.state.tasks.map((e, index) => \n                        <div>\n                        {\n                            <div class=\"col-sm-4\">\n                            {(() => {\n                                if(e.Imagen != null){\n                                    return <Ifblock e = {e} this = {props.this}/>\n                                }else{\n                                    return <Elseblock e = {e} this = {props.this}/>\n                                }\n                            })()}\n                             <div class = \"box\"></div>\n                            </div>                \n                        } \n                        </div>\n                    )   \n                }\n                </div>\n                </div>\n                </div>   \n            </section> \n        </body> \n    );\n\n}\n\n\nfunction Search(props){\n    return(\n        <Modal isOpen={props.this.state.modalBuscar} fade={false}>\n            <ModalHeader>\n            <div><h3>Buscar</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"puesto\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Salario: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"salario\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Categoria\n                </label>\n                <Dropdown \n                name = \"rol\" \n                options = {props.this.state.catego}\n                onChange={props.this.handleChangeC}\n                placeholder=\"--\" \n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Departamento\n                </label>\n                <Dropdown \n                name = \"depa\" \n                options={props.this.state.depas}\n                onChange={props.this.handleChangeD}\n                placeholder=\"--\" />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.buscar()}\n                >\n                Buscar\n                </Button>\n                <Button\n                className=\"btn btn-danger\"\n                onClick={() => props.this.cerrarModalBuscar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n            </Modal>\n    );\n}\n\n\nfunction Select(props){\n    return(\n        <Modal isOpen={props.this.state.modalSelect} fade={false}>\n        <ModalHeader>\n        <div><h3>Aplicar para puesto</h3></div>\n        </ModalHeader>\n        <ModalBody>\n            <FormGroup>\n            <label>\n                CUI: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"cui\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Nombres: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"nombre\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Apellidos: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"apellido\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Correo: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"correo\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                Direccion \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"direccion\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            <FormGroup>\n            <label>\n                Telefono: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"telefono\"\n                type=\"text\"\n                onChange={props.this.handleChange}\n            />\n            </FormGroup>\n            <FormGroup>\n            <label>\n                CV: \n            </label>\n            <input\n                className=\"form-control\"\n                name=\"cv\"\n                type=\"file\"\n                multiple={false}\n                accept=\".pdf\"\n                onChange={props.this.handleChangeF}\n            />\n            </FormGroup>\n            </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n            <Button\n            color=\"primary\"\n            onClick={() => props.this.aplicar()}\n            >\n            Aplicar\n            </Button>\n            <Button\n            className=\"btn btn-danger\"\n            onClick={() => props.this.cerrarModalSelect()}\n            >\n            Cancelar\n            </Button>\n        </ModalFooter>\n        </Modal>\n    );\n}\n\n\nexport default guest;\n","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js",["44","45","46"],"import React, { Component, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport {getCurrentDate} from '../utils/date'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-dropdown/style.css';\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\n\n\n\nclass AdminUser extends Component{\n    \n    constructor() {\n        super();\n        this.state = {\n            modalActualizar: false,\n            modalInsertar: false,\n            load2: false,\n            tasks: [],\n            copy:[],\n            data :{\n                id: '',\n                user: '',\n                pass: '',\n                estado: '',\n                inicio: '',\n                fin: '',\n                correo: '',\n                rol: '',\n                depa: ''\n            },\n            search:{\n                user: null,\n                estado: null,\n                inicio: null,\n                fin: null,\n                rol: null\n            },\n            estado: [\"Activo\", \"Inactivo\"],\n            load : true,\n            bus: false,\n            modalBuscar: false,\n            rols: [\"Coordinador\", \"Reclutador\", \"Revisor\"], \n            depas: [],\n            date : getCurrentDate()\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeR = this.handleChangeR.bind(this);\n        this.handleChangeD = this.handleChangeD.bind(this);\n        this.handleChangeS = this.handleChangeS.bind(this);\n        this.handleChangeES = this.handleChangeES.bind(this);\n        this.handleChangeRS = this.handleChangeRS.bind(this);\n\n        this.fetchTasks();\n        this.fetchdepa();\n    }\n    \n    fetchTasks() {\n        fetch('/selectU')\n          .then(res => res.json())\n          .then(data => {\n            console.log(data)\n            this.setState({tasks: data, load: false, copy: data});\n          });\n    }\n    fetchdepa() {\n        fetch('/depas')\n          .then(res => res.json())\n          .then(data => {\n            const aux = [];\n            for(const i of data){\n                aux.push(i.nombre)    \n            }\n            this.setState({depas: aux});\n        });\n    }\n    handleChangeES(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              estado: e.value\n          },\n        });\n    } \n    handleChangeRS(e) {\n        this.setState({\n          search:{\n              ...this.state.search,\n              rol: e.value\n          },\n        });\n    }\n\n\n    handleChangeS(e) {\n        const { name, value } = e.target;\n        this.setState({\n          search:{\n              ...this.state.search,\n              [name]: value\n          },\n        });\n    }\n\n    buscar(Finicio, Ffinal){\n        this.setState({load2: true})\n        console.log(this.state.search)\n        let inicio = null, final = null;\n        if(Finicio != null) inicio =  `${Finicio.getFullYear()}-${Finicio.getMonth()+1}-${Finicio.getDate()}`\n        if(Ffinal != null) final = `${Ffinal.getFullYear()}-${Ffinal.getMonth()+1}-${Ffinal.getDate()}`\n        console.log(inicio)\n        console.log(final)\n        this.setState({load: true})\n\n        let estado = null;\n        if(this.state.search.estado == 'Activo'){\n            estado = '1'\n        }else if(this.state.search.estado == 'Inactivo'){\n            estado = '0'\n        }\n        fetch('/searchU', {\n            method: 'POST',\n            body: JSON.stringify({\n                usuario: this.state.search.user,\n                estado: estado,\n                inicio: inicio,\n                final: final,\n                rol: this.state.search.rol\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data});\n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n\n        this.setState({bus: true, modalBuscar: false})\n        this.setState({\n            search:{\n                ...this.state.search,\n                user: null,\n                estado: null,\n                inicio: null,\n                fin: null,\n                rol: null\n            },\n          });\n    }\n\n    mostrarModalBuscar(){\n        this.setState({modalBuscar: true})\n    }\n    cerrarModalBuscar(){\n        this.setState({modalBuscar: false})\n        //this.fetchTasks();\n    }\n    cerrarBusqueda(){\n        this.setState({tasks: this.state.copy, bus: false})\n    }\n\n\n    mostrarModalInsertar(){\n        this.setState({modalInsertar: true})\n    }\n    cerrarModalInsertar(){\n        this.setState({modalInsertar: false})\n        this.fetchTasks();\n    }\n    mostrarModalActualizar(dato){\n        this.setState({\n            data : dato,\n            modalActualizar: true\n        })\n    }\n    cerrarModalActualizar(){\n        this.setState({modalActualizar: false})\n    }\n\n    editar(dato){\n        this.setState({load2: true})\n        console.log(this.state.data)\n        fetch('/updateU', {\n            method: 'PUT',\n            body: JSON.stringify({\n                idP: dato.id,\n                usuario: dato.user,\n                pass: dato.pass,\n                rol: dato.rol,\n                correo: dato.correo,\n                depa: dato.depa\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                window.alert(data.msg);\n                this.fetchTasks();\n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n        this.cerrarModalActualizar();\n        this.fetchTasks();\n    }\n    eliminar(dato){\n        this.setState({load2: true})\n        console.log(this.state.data)\n        fetch('/deleteU', {\n            method: 'PUT',\n            body: JSON.stringify({\n                idP: dato.id,\n                fin: this.state.date\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                window.alert(data.msg);\n                this.fetchTasks();\n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n        this.fetchTasks();\n    }\n    insertar(){\n        this.setState({load2: true})\n        console.log(this.state.data)\n        fetch('/insertU', {\n            method: 'POST',\n            body: JSON.stringify({\n                usuario: this.state.data.user,\n                pass: this.state.data.pass,\n                inicio: this.state.date,\n                rol: this.state.data.rol,\n                correo: this.state.data.correo,\n                depa:this.state.data.depa\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                window.alert(data.msg);\n                this.fetchTasks();\n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n        this.cerrarModalInsertar()\n        this.fetchTasks();\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n          data:{\n              ...this.state.data,\n              [name]: value\n          },\n        });\n    }\n\n    handleChangeR(e) {\n        this.setState({\n          data:{\n              ...this.state.data,\n              rol: e.value\n          },\n        });\n    }\n    handleChangeD(e) {\n        this.setState({\n          data:{\n              ...this.state.data,\n              depa: e.value\n          },\n        });\n    }\n\n    cerrarSesion=()=>{\n        window.location.href='./';\n    }\n\n    render (){\n        return(\n            <div className=\"crud\">\n            <Load this= {this}/>\n            <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n            <input type=\"checkbox\"/>\n            <span></span>\n            <span></span>\n            <span></span>\n            <ul id=\"menu\">\n            <button onClick={()=>this.mostrarModalBuscar()}><li>Buscar Usuario</li></button>\n            <div className='boxer'/>\n            <button onClick={()=>this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n            </ul>\n            </div>\n            </nav>\n            <div className='xml'>\n            <h1>Usuarios</h1>\n            </div>\n            <Container>\n            <br />\n            <Button color=\"primary\" onClick={()=>this.mostrarModalInsertar()}>Crear Usuario</Button>\n            <br />\n            <br />\n            {(() => {\n                    if(this.state.bus === true){\n                        return<Container>\n                        <Button style={{float: 'right'}}\n                        className=\"btn btn-danger\"\n                        onClick={() => this.cerrarBusqueda()}\n                        >\n                        X\n                        </Button>\n                        <div class = \"box\"></div>\n                        </Container>\n                        \n                    }\n            })()}\n            <Table>\n                <thead>\n                <tr>\n                    <th>Usuario</th>\n                    <th>Contraseña</th>\n                    <th>Correo</th>\n                    <th>Fecha Inicio</th>\n                    <th>Fecha Fin</th>\n                    <th>Rol</th>\n                    <th>Departamento</th>\n                </tr>\n                </thead>\n\n                {this.state.tasks.map((dato) => (\n                    (() => {\n                        if(dato.estado == 1){\n                            return <Ifyes dato = {dato} this= {this}/>\n                        }else{\n                            return <Elsen dato = {dato} this = {this}/>\n                        }\n                    })()\n                ))}\n\n            </Table>\n            </Container>\n            \n            <Modal isOpen={this.state.modalInsertar} fade={false}>\n            <ModalHeader>\n            <div><h3>Insertar Usuario</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Usuario: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    password: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"pass\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"correo\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Rol\n                </label>\n                <Dropdown \n                name = \"rol\" options={this.state.rols} \n                onChange={this.handleChangeR} \n                placeholder=\"Selecciona Rol\" />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Departamento\n                </label>\n                <Dropdown name = \"depa\" options={this.state.depas} onChange={this.handleChangeD} placeholder=\"Selecciona Departamento\" />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => this.insertar()}\n                >\n                Insertar\n                </Button>\n                <Button\n                className=\"btn btn-danger\"\n                onClick={() => this.cerrarModalInsertar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n            </Modal>\n\n            <Modal isOpen={this.state.modalActualizar} fade={false}>\n            <ModalHeader>\n            <div><h3>Editar Usuario</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Usuario: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.data.user}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Contraseña: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"pass\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.data.pass}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"correo\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.data.correo}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Rol\n                </label>\n                <Dropdown name = \"rol\" options={this.state.rols} onChange={this.handleChangeR} value={this.state.data.rol} placeholder=\"Selecciona Rol\" />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Departamento\n                </label>\n                <Dropdown name = \"depa\" options={this.state.depas} onChange={this.handleChangeD} value={this.state.data.depa} placeholder=\"Selecciona Departamento\" />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => this.editar(this.state.data)}\n                >\n                Editar\n                </Button>\n                <Button\n                color=\"danger\"\n                onClick={() => this.cerrarModalActualizar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n            </Modal>  \n\n            <SearchU this={this}/>\n        </div>\n        );\n    }\n}\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\nfunction Ifyes(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#81C784\"}}>\n        <tr key={dato.id} >\n        <td>{dato.user}</td>\n        <td>{dato.pass}</td>\n        <td>{dato.correo}</td>\n        <td>{dato.inicio}</td>\n        <td>{dato.fin}</td>\n        <td>{dato.rol}</td>\n        <td>{dato.depa}</td>\n        <td>\n            <Button\n            color=\"primary\"\n            onClick={() => props.this.mostrarModalActualizar(dato)}\n            >\n            Editar\n            </Button>\n            <Button color=\"danger\" onClick={()=> props.this.eliminar(dato)}>Eliminar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );    \n}\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id}>\n        <td>{dato.user}</td>\n        <td>{dato.pass}</td>\n        <td>{dato.correo}</td>\n        <td>{dato.inicio}</td>\n        <td>{dato.fin}</td>\n        <td>{dato.rol}</td>\n        <td>{dato.depa}</td>\n        </tr>\n        </tbody>\n    );\n}\n\nfunction SearchU(props) {\n    var [startDate, setStartDate] = useState(null);\n    var [startDateF, setStartDateF] = useState(null);\n    return(\n        <Modal isOpen={props.this.state.modalBuscar} fade={false}>\n            <ModalHeader>\n            <div><h3>Buscar Usuario</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Usuario: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Estado\n                </label>\n                <Dropdown name = \"estado\" options={props.this.state.estado} onChange={props.this.handleChangeES} value={props.this.state.search.estado} placeholder=\"--\" />\n                </FormGroup>\n\n                <FormGroup>\n                <label>\n                    Fecha Inicio: \n                </label>\n                <DatePicker\n                    name = \"inicio\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    isClearable\n                    placeholderText=\"Selecciona Fecha\"    \n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    fixedHeight\n                    //withPortal\n                />\n                </FormGroup>\n\n                <FormGroup>\n                <label>\n                    Fecha Final: \n                </label>\n                <DatePicker\n                    name = \"fin\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    selected={startDateF}\n                    isClearable\n                     placeholderText=\"Selecciona Fecha\"\n                    onChange={(date) => setStartDateF(date)}\n                    fixedHeight\n                    //withPortal\n                />\n                </FormGroup>\n\n                <FormGroup>\n                <label>\n                    Rol\n                </label>\n                <Dropdown name = \"rol\" options={props.this.state.rols} onChange={props.this.handleChangeRS} value={props.this.state.search.rol} placeholder=\"--\" />\n                </FormGroup>\n\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.buscar(startDate, startDateF)}\n                >\n                Buscar\n                </Button>\n                <Button\n                color=\"danger\"\n                onClick={() => props.this.cerrarModalBuscar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n\n\n\n\nexport default AdminUser;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reclutador.js",["47","48","49","50"],"import React, { Component, useState } from \"react\";\nimport Cookies from 'universal-cookie';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\n\n\nconst cookies = new Cookies();\n\nclass Reclutador extends Component{\n    constructor() {\n        super();\n        if(cookies.get('id') === undefined) window.location.href = \"./login\"\n        this.state = {\n            id: cookies.get('id'),\n            tasks: [],\n            copy: [],\n            load2: false,\n            modalBuscar: false,\n            modalVer: false,\n            search:{\n                nombre: null,\n                puesto: null,\n                fecha: null\n            },\n            load: true,\n            depa:{\n                id: '',\n                nombre: ''\n            },\n            data: {},\n            puestos:[],\n            bus: false,\n        };\n        this.handleChangeS = this.handleChangeS.bind(this);\n        this.handleChangeP = this.handleChangeP.bind(this);\n        this.fetchDepas();\n    }\n\n    fetchDepas(){\n        fetch('/depasr', {\n            method: 'POST',\n            body: JSON.stringify({\n                per: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({depa:{\n                    id: data.id,\n                    nombre : data.nombre\n                }});\n                this.fetchPuestos(data.id)\n                this.fetchSelect(data.id)\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchPuestos(id){\n        console.log(this.state.depa);\n        fetch('/puestos', {\n            method: 'POST',\n            body: JSON.stringify({\n                depa : id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({puestos: data});\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchSelect(id){\n        console.log(this.state.depa)\n        fetch('/selectAp', {\n            method: 'POST',\n            body: JSON.stringify({\n                depa: id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data, copy:data, load:false});\n                console.log(data);\n            })\n            .catch(err => console.error(err));\n    }\n\n\n    cerrarSesion(){\n        cookies.remove('id', {path: \"/\"});\n        window.location.href='./';\n    }\n\n    mostrarModalBuscar(){\n        this.setState({modalBuscar: true})\n    }\n\n    handleChangeS(e){\n        const { name, value } = e.target;\n        this.setState({\n          search:{\n              ...this.state.search,\n              [name]: value\n          },\n        });\n    }\n\n    handleChangeP(e){\n        this.setState({\n          search:{\n              ...this.state.search,\n              puesto: e.value\n          },\n        });\n    }\n\n    buscar(Ffinal){\n        this.setState({load2: true})\n        console.log(this.state.search)\n        let final = null;\n        if(Ffinal != null) final = `${Ffinal.getFullYear()}-${Ffinal.getMonth()+1}-${Ffinal.getDate()}`\n        console.log(final)\n        fetch('/searchAp', {\n            method: 'POST',\n            body: JSON.stringify({\n                depa: this.state.depa.id,\n                nombre: this.state.search.nombre,\n                fecha: final,\n                puesto: this.state.search.puesto,\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({tasks: data});\n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n        this.setState({bus: true, modalBuscar: false})\n        this.setState({\n            search:{\n                ...this.state.search,\n                nombre: null,\n                puesto: null,\n                fecha: null\n            },\n        });\n    }\n\n    cerrarModalBuscar(){\n        this.setState({modalBuscar: false})\n    }\n\n    cerrarBusqueda(){\n        this.setState({tasks: this.state.copy, bus: false})\n    }   \n\n    mostrarModalVer(dato){\n        this.setState({modalVer: true, data:dato})\n    }\n    cerrarModalVer(){\n        this.setState({modalVer: false})\n    }\n\n    decargarCV(cv){\n        this.setState({load2: true})\n        fetch('/controller', {\n            method: 'POST',\n            body: JSON.stringify({\n                d:cv\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.blob())\n            .then((blob) => {\n                // Create blob link to download\n                const url = window.URL.createObjectURL(\n                  new Blob([blob]),\n                );\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute(\n                  'download',\n                  `${cv}`,\n                );\n                // Append to html link element page\n                document.body.appendChild(link);\n                // Start download\n                link.click();\n                this.setState({load2: false})\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            });\n    }\n\n    Aceptar(data){\n        this.setState({load2: true})\n        fetch('/apto', {\n            method: 'PUT',\n            body: JSON.stringify({\n                apto: '1',\n                cui: data.cui, \n                correo: data.correo, \n                puesto: data.puesto,\n                nombre: data.nombre\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                window.alert(data.msg);\n                this.fetchSelect(this.state.depa.id); \n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n        this.fetchSelect(this.state.depa.id);    \n    }\n\n    rechazar(data){\n        this.setState({load2: true})\n        fetch('/apto', {\n            method: 'PUT',\n            body: JSON.stringify({\n                apto: '0',\n                cui: data.cui,\n                correo: data.correo,\n                puesto: data.puesto,\n                nombre: data.nombre\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                window.alert(data.msg);\n                this.fetchSelect(this.state.depa.id); \n                this.setState({load2: false})\n            })\n            .catch(err => console.error(err));\n        this.fetchSelect(this.state.depa.id);   \n    }\n\n    render(){\n        return <div>\n            {(() => {\n            if(this.state.load == true){\n                return<Container>\n                <div class=\"load\">\n                <hr/><hr/><hr/><hr/>\n                </div>\n                </Container>\n                \n            }else{\n                return (\n                   <div>\n                       <Menu this = {this}/>\n                        <Search this = {this}/>\n                        <Fethc this = {this}/>\n                        <Ver this = {this}/>\n                   </div> \n                ); \n            }\n        })()}\n           <Load this= {this}/>\n        </div>\n    }\n\n}\n\nfunction Load(props){\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n        <div class=\"load\">\n        <hr/><hr/><hr/><hr/>\n        </div>\n        </Modal>\n    );\n}\n\nfunction Menu(props){\n    return ( <div>\n        <nav role=\"navigation\">\n        <div id=\"menuToggle\">\n        <input type=\"checkbox\"/>\n        <span></span>\n        <span></span>\n        <span></span>\n        <ul id=\"menu\">\n        <button onClick={()=>props.this.mostrarModalBuscar()}><li>Buscar Aplicante</li></button>\n        <div className='boxer'/>\n        <button onClick={()=>props.this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n        </ul>\n        </div>\n        </nav>\n        <div className='xml'>\n        <h2>Aplicantes en el departamento: {props.this.state.depa.nombre}</h2>\n        </div>\n        </div>\n    );\n}\n\nfunction Search(props) {\n    var [startDateF, setStartDateF] = useState(null);\n    return(\n        <Modal isOpen={props.this.state.modalBuscar} fade={false}>\n            <ModalHeader>\n            <div><h3>Buscar Aplicante</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"nombre\"\n                    type=\"text\"\n                    onChange={props.this.handleChangeS}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Puesto\n                </label>\n                <Dropdown name = \"puesto\" \n                options={props.this.state.puestos} \n                onChange={props.this.handleChangeP} \n                value={props.this.state.search.puesto}\n                 placeholder=\"--\" />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Fecha Postulacion: \n                </label>\n                <DatePicker\n                    name = \"fin\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    selected={startDateF}\n                    isClearable\n                    placeholderText=\"Selecciona Fecha\"\n                    onChange={(date) => setStartDateF(date)}\n                    fixedHeight\n                    //withPortal\n                />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                color=\"primary\"\n                onClick={() => props.this.buscar(startDateF)}\n                >\n                Buscar\n                </Button>\n                <Button\n                color=\"danger\"\n                onClick={() => props.this.cerrarModalBuscar()}\n                >\n                Cancelar\n                </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n\nfunction Ver(props) {\n    return(\n        <Modal isOpen={props.this.state.modalVer} fade={false}>\n            <ModalHeader>\n            <div><h3>Buscar Aplicante</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <label>\n                    CUI: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.cui}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Nombre: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"nombre\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.nombre}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Apellido: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"Apellido\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.apellido}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Correo: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.correo}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Direccion: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.direccion}\n                />\n                </FormGroup>\n                <FormGroup>\n                <label>\n                    Telefono: \n                </label>\n                <input\n                    className=\"form-control\"\n                    name=\"user\"\n                    type=\"text\"\n                    readOnly\n                    value = {props.this.state.data.telefono}\n                />\n                </FormGroup>\n\n            </ModalBody>\n            <ModalFooter>     \n            <Button\n            color=\"danger\"\n            onClick={() => props.this.cerrarModalVer()}\n            >\n            Cerrar\n            </Button>\n            </ModalFooter>\n        </Modal>   \n    );\n}\n\nfunction Fethc(props) {\n    return(\n        <Container>\n        <br />\n        {(() => {\n                if(props.this.state.bus === true){\n                    return<Container>\n                    <Button style={{float: 'right'}}\n                    className=\"btn btn-danger\"\n                    onClick={() => props.this.cerrarBusqueda()}\n                    >\n                    X\n                    </Button>\n                    <div class = \"box\"></div>\n                    </Container>\n                    \n                }\n        })()}\n        <Table>\n            <thead>\n            <tr>\n                <th>Nombre</th>\n                <th>Puesto</th>\n                <th>Fecha Postulacion</th>\n                <th>Datos Personales</th>\n                <th>CV</th>\n                <th>Reclutar</th>\n            </tr>\n            </thead>\n\n            {props.this.state.tasks.map((dato) => (\n                (() => {\n                    if(dato.apto == 1){\n                        return <Ifyes dato = {dato} this= {props.this}/>\n                    }else if(dato.apto == 0){\n                        return <Elsen dato = {dato} this = {props.this}/>\n                    }else if(dato.apto == 2){\n                        return <Nothing dato = {dato} this = {props.this}/>\n                    }\n                })()\n            ))}\n\n        </Table>\n        </Container>\n    );\n}\n\nfunction Ifyes(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#81C784\"}}>\n        <tr key={dato.id} >\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );    \n}\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return(\n        <tbody style={{backgroundColor : \"#F44336\"}}>\n        <tr key={dato.id}>\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}\n            >\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n        </td>\n        </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing(props) {\n    var dato = props.dato;\n    return(\n        <tbody >\n        <tr key={dato.id} >\n        <td>{dato.nombre}</td>\n        <td>{dato.puesto}</td>\n        <td>{dato.fecha}</td>\n        <td>\n            <Button\n            onClick={() => props.this.mostrarModalVer(dato)}>\n            Ver\n            </Button>\n        </td>    \n        <td>\n            <Button\n            onClick={() => props.this.decargarCV(dato.cv)}>\n            Descargar\n            </Button>\n        </td>\n        <td>\n            <Button\n            color=\"success\"\n            onClick={() => props.this.Aceptar(dato)}\n            >\n            Aceptar\n            </Button>\n            <Button color=\"danger\" \n            onClick={()=> props.this.rechazar(dato)}>\n            Rechazar</Button>\n        </td>\n        </tr>\n        </tbody>\n    );   \n}\n\nexport default Reclutador;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":5,"nodeType":"57","messageId":"58","endLine":10,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":252,"column":32,"nodeType":"61","messageId":"62","endLine":252,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":318,"column":9,"nodeType":"65","endLine":318,"endColumn":65},{"ruleId":"63","severity":1,"message":"64","line":345,"column":9,"nodeType":"65","endLine":345,"endColumn":65},{"ruleId":"59","severity":1,"message":"60","line":126,"column":37,"nodeType":"61","messageId":"62","endLine":126,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":128,"column":43,"nodeType":"61","messageId":"62","endLine":128,"endColumn":45},{"ruleId":"59","severity":1,"message":"60","line":359,"column":40,"nodeType":"61","messageId":"62","endLine":359,"endColumn":42},{"ruleId":"59","severity":1,"message":"60","line":284,"column":32,"nodeType":"61","messageId":"62","endLine":284,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":528,"column":34,"nodeType":"61","messageId":"62","endLine":528,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":530,"column":40,"nodeType":"61","messageId":"62","endLine":530,"endColumn":42},{"ruleId":"59","severity":1,"message":"60","line":532,"column":40,"nodeType":"61","messageId":"62","endLine":532,"endColumn":42},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]