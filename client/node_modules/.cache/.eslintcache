[{"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js":"1","/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js":"2","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js":"3","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js":"4","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js":"5","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js":"6","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js":"7","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reclutador.js":"8","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Applicant.js":"9","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reviewer.js":"10","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/coordinator.js":"11","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/socket.js":"12","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Chat.js":"13"},{"size":192,"mtime":1634671114320,"results":"14","hashOfConfig":"15"},{"size":1389,"mtime":1635534794494,"results":"16","hashOfConfig":"15"},{"size":18099,"mtime":1636506510076,"results":"17","hashOfConfig":"15"},{"size":3765,"mtime":1636093145527,"results":"18","hashOfConfig":"15"},{"size":220,"mtime":1634514982882,"results":"19","hashOfConfig":"15"},{"size":21620,"mtime":1636092868138,"results":"20","hashOfConfig":"15"},{"size":22158,"mtime":1636092925254,"results":"21","hashOfConfig":"15"},{"size":18973,"mtime":1636092997972,"results":"22","hashOfConfig":"15"},{"size":34283,"mtime":1636508903910,"results":"23","hashOfConfig":"15"},{"size":28944,"mtime":1636508592314,"results":"24","hashOfConfig":"15"},{"size":18391,"mtime":1636509242598,"results":"25","hashOfConfig":"15"},{"size":82,"mtime":1635550251993,"results":"26","hashOfConfig":"15"},{"size":2641,"mtime":1636093098662,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1393peg",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/daniel/Escritorio/MIA-Proyecto2/client/src/index.js",[],["59","60"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/App.js",["61","62"],"import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport { Route } from \"wouter\";\nimport Guest from './components/guest';\nimport Login from './components/login';\nimport AdminSystem from \"./components/AdminSystem\";\nimport AdminUser from \"./components/AdminUser\";\nimport Reclutador from \"./components/reclutador\";\nimport Applicant from \"./components/Applicant\";\nimport Reviewer from \"./components/reviewer\";\nimport Coordinador from './components/coordinator';\n\nfunction App() {\n\n  const [auth, SetAuth] = useState();\n\n  return( \n    <Router>\n      <Switch>\n        <Route path= \"/login\">\n          <Login/>\n        </Route>\n        <Route path= \"/Applicant/:id\">\n          {params => <Applicant id={params.id} />}\n        </Route>\n        <Route path= \"/Coordinador/:id\">\n          {params => <Coordinador id={params.id} />}\n        </Route>\n        <Route path= \"/reviewer/:id\">\n          {params => <Reviewer id={params.id} />}\n        </Route>\n        <Route path= \"/reclutar/:id\">\n          {params => <Reclutador id={params.id} />}\n        </Route>\n        <Route path=\"/AdminSystem\">\n          <AdminSystem />\n        </Route>\n        <Route path=\"/AdminUser\">\n          <AdminUser/>\n        </Route>\n        <Route path=\"/\">\n          <Guest/>\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/guest.js",["63","64"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/login.js",["65"],"import React, { Component } from \"react\";\nimport '../styles/login.css'\nimport Cookies from 'universal-cookie';\nimport {\n    Modal,\n} from \"reactstrap\";\nimport Swal from 'sweetalert2'\n\n\nconst cookies = new Cookies();\n\n\nclass login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            load2: false,\n            pass: '',\n            tasks: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.prob = this.prob.bind(this);\n    }\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    prob(e) {\n        this.setState({ load2: true })\n        e.preventDefault();\n        fetch('/loginn', {\n            method: 'POST',\n            body: JSON.stringify({\n                usuario: this.state.user,\n                pass: this.state.pass\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                switch (data.Rol) {\n                    case \"Admin Sistema\":\n                        window.location.href = `./AdminSystem`;\n                        break;\n                    case \"Admin Usuario\":\n                        window.location.href = \"./AdminUser\";\n                        break;\n                    case \"Coordinador\":\n                        window.location.href = `./Coordinador/${data.id}`;\n                        break;\n                    case \"Reclutador\":\n                        console.log(data.id)\n                        window.location.href = `./reclutar/${data.id}`;\n                        break;\n                    case \"Revisor\":\n                        window.location.href = `./reviewer/${data.id}`;\n                        break;\n                    case undefined:\n                        console.log(\"NADA\")\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: 'Usuario y/o Contraseña incorrecta',\n                        })\n                        this.setState({ user: '', pass: '', load2: false });\n                        break;\n                    case \"Aplicante\":\n                        window.location.href = `./Applicant/${data.id}`;\n                        break;\n                    default:\n                        break;\n                }\n            })\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        return <div className=\"login\">\n            <div class=\"wrapper fadeInDown\">\n                <div id=\"formContent\">\n                    <h2 class=\"active\"> Iniciar sesion </h2>\n                    <div class=\"fadeIn first\">\n                    </div>\n                    <form onSubmit={this.prob}>\n                        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"user\" onChange={this.handleChange} value={this.state.user} placeholder=\"Usuario\" />\n                        <input type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"pass\" onChange={this.handleChange} value={this.state.pass} placeholder=\"Contraseña\" />\n                        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\" />\n                    </form>\n                </div>\n            </div>\n            <Load this={this} />\n        </div>\n    }\n}\nfunction Load(props) {\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n            <div class=\"load\">\n                <hr /><hr /><hr /><hr />\n            </div>\n        </Modal>\n    );\n}\n\nexport default login;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/date.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminSystem.js",["66","67","68","69","70","71"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport Dropdown from 'react-dropdown';\nimport Pdf from \"react-to-pdf\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport '../styles/asys.css'\nimport {\n    Button,\n    FormGroup,\n    Container,\n    Modal,\n    Table\n} from \"reactstrap\";\n\n\nconst ref2 = React.createRef();\nconst ref3 = React.createRef();\nconst ref4 = React.createRef();\nconst ref5 = React.createRef();\nconst ref6 = React.createRef();\n\nclass AdminSystem extends Component {\n    constructor() {\n        super();\n        this.state = {\n            dep: '',\n            deps: [],\n            load2: false,\n            value: '',\n            View2: false,\n            View3: false,\n            View4: false,\n            View5: false,\n            View6: false,\n            tasks2: [],\n            tasks3: [],\n            tasks4: [],\n            tasks5: [],\n            tasks6: [],\n            options: {\n                orientation: 'landscape',\n                unit: 'in',\n            }\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeP = this.handleChangeP.bind(this);\n        this.cargarXml = this.cargarXml.bind(this);\n        this.sendXml = this.sendXml.bind(this);\n        this.fetchdepa();\n    }\n    fetchdepa() {\n        fetch('/depas')\n            .then(res => res.json())\n            .then(data => {\n                const aux = [];\n                for (const i of data) {\n                    aux.push(i.nombre)\n                }\n                aux.push(\"INSTITUCION COMPLETA\")\n                this.setState({ deps: aux });\n            });\n    }\n    fetchtask1() {\n        this.setState({ load2: true })\n        fetch('/report1', {\n            method: 'POST',\n            body: JSON.stringify(\n                { depa: this.state.dep }\n            ),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.blob())\n            .then((blob) => {\n                // Create blob link to download\n                const url = window.URL.createObjectURL(\n                    new Blob([blob]),\n                );\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute(\n                    'download',\n                    `report1.svg`,\n                );\n                // Append to html link element page\n                document.body.appendChild(link);\n                // Start download\n                link.click();\n                this.setState({ load2: false })\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n                this.setState({ load2: false })\n                Swal.fire({\n                    title: \"Reporte Generado Exitosamente\",\n                })\n            });\n    }\n    fetchtask2() {\n        this.setState({ load2: true })\n        fetch('/report2', {\n            method: 'POST',\n            body: JSON.stringify(\n                { depa: this.state.dep }\n            ),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire({\n                    title: \"Reporte Generado Exitosamente\",\n                })\n                console.log(data)\n                this.setState({ View2: true, load2: false, tasks2: data.resultado })\n            })\n            .catch(err => console.error(err));\n    }\n    fetchTask3() {\n        this.setState({ load2: true })\n        fetch('/report3')\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire({\n                    title: \"Reporte Generado Exitosamente\",\n                })\n                this.setState({ View3: true, load2: false, tasks3: data.resultado })\n            })\n            .catch(err => console.error(err));\n    }\n    fetchTask4() {\n        this.setState({ load2: true })\n        fetch('/report4')\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire({\n                    title: \"Reporte Generado Exitosamente\",\n                })\n                this.setState({ View4: true, load2: false, tasks4: data.resultado })\n            })\n            .catch(err => console.error(err));\n    }\n    fetchTask5() {\n        this.setState({ load2: true })\n        fetch('/report5')\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire({\n                    title: \"Reporte Generado Exitosamente\",\n                })\n                this.setState({ View5: true, load2: false, tasks5: data.resultado })\n            })\n            .catch(err => console.error(err));\n    }\n    fetchTask6() {\n        this.setState({ load2: true })\n        fetch('/report6')\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire({\n                    title: \"Reporte Generado Exitosamente\",\n                })\n                this.setState({ View6: true, load2: false, tasks6: data.resultado })\n            })\n            .catch(err => console.error(err));\n    }\n    enviar() {\n\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    handleChangeP(e) {\n        this.setState({\n            dep: e.value\n        });\n    }\n    sendXml() {\n        this.setState({ load2: true })\n        fetch('/carga', {\n            method: 'POST',\n            body: JSON.stringify({ \"xml\": this.state.value }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire({\n                    title: data.msg,\n                    showClass: {\n                        popup: 'animate__animated animate__fadeInDown'\n                    },\n                    hideClass: {\n                        popup: 'animate__animated animate__fadeOutUp'\n                    }\n                })\n                this.setState({ load2: false })\n            })\n            .catch(err => console.error(err));\n        this.setState({ value: '' });\n\n    }\n\n    cerrarSesion = () => {\n        window.location.href = './';\n    }\n\n    cargarXml(e) {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        const fileReader = new FileReader();\n\n        fileReader.readAsText(file);\n\n        fileReader.onload = () => {\n            console.log(fileReader.result);\n            this.setState({ value: fileReader.result });\n        }\n\n        fileReader.onerror = () => {\n            console.log(fileReader.error);\n        }\n    }\n\n    render() {\n        return <div>\n            <nav role=\"navigation\">\n                <div id=\"menuToggle\">\n                    <input type=\"checkbox\" />\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <ul id=\"menu\">\n                        <button onClick={() => this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n                    </ul>\n                </div>\n            </nav>\n            <div className=\"xml\">\n                <h1>Admin Sistema</h1>\n            </div>\n            <div className=\"box\"></div>\n            <Container>\n                <Tabs >\n                    <TabList>\n                        <Tab>Carga</Tab>\n                        <Tab>Reporte 1</Tab>\n                        <Tab>Reporte 2</Tab>\n                        <Tab>Reporte 3</Tab>\n                        <Tab>Reporte 4</Tab>\n                        <Tab>Reporte 5</Tab>\n                        <Tab>Reporte 6</Tab>\n                    </TabList>\n                    <TabPanel >\n                        <Tab1 this={this} />\n                    </TabPanel>\n                    <TabPanel >\n                        <Report_1 this={this} />\n                    </TabPanel>\n                    <TabPanel >\n                        <Report_2 this={this} />\n                    </TabPanel>\n                    <TabPanel >\n                        <Report_3 this={this} />\n                    </TabPanel>\n                    <TabPanel >\n                        <Report_4 this={this} />\n                    </TabPanel>\n                    <TabPanel >\n                        <Report_5 this={this} />\n                    </TabPanel>\n                    <TabPanel >\n                        <Report_6 this={this} />\n                    </TabPanel>\n                </Tabs>\n            </Container>\n\n\n            <Load this={this} />\n        </div>\n    }\n}\n\n\nfunction Tab1(props) {\n    return (\n        <div className=\"xml\">\n            <h3>Carga Masiva</h3>\n            <div>\n                <input type=\"file\"\n                    multiple={false}\n                    accept=\".xml\"\n                    onChange={props.this.cargarXml}\n                />\n                <div className=\"boxer\" />\n                <div className=\"boxer\" />\n                <p>\n                    <textarea name=\"value\" value={props.this.state.value} onChange={props.this.handleChange} id=\"textExample\" rows=\"10\" cols=\"60\"></textarea>\n                </p>\n                <div className=\"boxer\" />\n                <div className=\"boxer\" />\n                <p>\n                    <button onClick={props.this.sendXml} id='type'>Confirmar</button>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nfunction Report_1(props) {\n    return (\n        <Container>\n            <div className=\"boxer\"></div>\n            <div className=\"boxer\"></div>\n            <FormGroup>\n                <Dropdown name=\"Dep\"\n                    options={props.this.state.deps}\n                    onChange={props.this.handleChangeP}\n                    value={props.this.state.dep}\n                    placeholder=\"Seleccione Departamento\" />\n            </FormGroup>\n            <Button\n                color=\"primary\"\n                onClick={() => props.this.fetchtask1()}\n            >\n                Generar Reporte\n            </Button>\n\n            <div className=\"xmt\">\n                <h2>Reporte 1 </h2>\n            </div>\n            <div className=\"xm\" >\n                <text style={{ textAlign: 'center' }}>Organigrama de la institución, se puede seleccionar tanto la institución completa o un departamento en específico</text>\n            </div>\n\n        </Container>\n    );\n}\n\nfunction Report_2(props) {\n    return (\n        <Container>\n            <div className=\"boxer\"></div>\n            <div className=\"boxer\"></div>\n            <FormGroup>\n                <Dropdown name=\"Dep\"\n                    options={props.this.state.deps}\n                    onChange={props.this.handleChangeP}\n                    value={props.this.state.dep}\n                    placeholder=\"Seleccione Departamento\" />\n            </FormGroup>\n            <Button\n                color=\"primary\"\n                onClick={() => props.this.fetchtask2()}\n            >\n                Generar Reporte\n            </Button>\n            <div ref={ref2}>\n                <div className=\"xmt\">\n                    <h2>Reporte 2</h2>\n                </div>\n                <div className=\"xm\" style={{ float: 'center' }}>\n                    <text> Planilla de personas contratadas por un departamento en específico o todos los departamentos.</text>\n                </div>\n                <div className=\"box\"></div>\n                {props.this.state.View2 && <div>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>No.</th>\n                                <th>Departamento</th>\n                                <th>Nombre y Apellido</th>\n                                <th>Puesto</th>\n                            </tr>\n                        </thead>\n                        {props.this.state.tasks2.map((dato, index) => (\n                            <tbody>\n                                <tr>\n                                    <td>{index + 1}</td>\n                                    <td>{dato[2]}</td>\n                                    <td>{dato[0]} {dato[1]}</td>\n                                    <td>{dato[4]}</td>\n                                </tr>\n                            </tbody>\n                        ))}\n                    </Table>\n                </div>}\n            </div>\n            {props.this.state.View2 &&\n                <Pdf targetRef={ref2} filename=\"reporte2.pdf\"\n                    options={props.this.state.options} x={.5} y={.5} scale={0.8}\n                >\n                    {({ toPdf }) => <Button\n                        color=\"success\"\n                        style={{ float: 'right' }}\n                        onClick={toPdf}>Descargar Reporte</Button>}\n                </Pdf>}\n        </Container>\n    );\n}\n\nfunction Report_3(props) {\n    return (\n        <Container>\n            <div className=\"boxer\"></div>\n            <div className=\"boxer\"></div>\n            <Button\n                color=\"primary\"\n                onClick={() => props.this.fetchTask3()}\n            >\n                Generar Reporte\n            </Button>\n            <div ref={ref3}>\n                <div className=\"xmt\">\n                    <h2>Reporte 3</h2>\n                </div>\n                <div className=\"xm\" >\n                    <text style={{ textAlign: 'center' }}>Top 5 de departamentos con más personas contratadas</text>\n                </div>\n                <div className=\"box\"></div>\n                {props.this.state.View3 && <div>\n                    <Table >\n                        <thead>\n                            <tr>\n                                <th>No.</th>\n                                <th>Departamento</th>\n                                <th>Personas Contratadas</th>\n                            </tr>\n                        </thead>\n                        {props.this.state.tasks3.map((dato, index) => (\n                            <tbody>\n                                <tr>\n                                    <td>{index + 1}</td>\n                                    <td>{dato[0]}</td>\n                                    <td>{dato[1]}</td>\n                                </tr>\n                            </tbody>\n                        ))}\n                    </Table>\n                </div>\n                }\n            </div>\n            {props.this.state.View3 &&\n                <Pdf targetRef={ref3} filename=\"reporte3.pdf\"\n                    options={props.this.state.options} x={.5} y={.5} scale={0.8}\n                >\n                    {({ toPdf }) => <Button\n                        color=\"success\"\n                        style={{ float: 'right' }}\n                        onClick={toPdf}>Descargar Reporte</Button>}\n                </Pdf>\n            }\n        </Container>\n    );\n}\n\nfunction Report_4(props) {\n    return (\n        <Container>\n            <div className=\"boxer\"></div>\n            <div className=\"boxer\"></div>\n            <Button\n                color=\"primary\"\n                onClick={() => props.this.fetchTask4()}\n            >\n                Generar Reporte\n            </Button>\n            <div ref={ref4}>\n                <div className=\"xmt\">\n                    <h2>Reporte 4</h2>\n                </div>\n                <div className=\"xm\" >\n                    <text style={{ textAlign: 'center' }}>Top 5 de reclutadores con más invitaciones enviadas</text>\n                </div>\n                <div className=\"box\"></div>\n                {props.this.state.View4 && <div>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>No.</th>\n                                <th>Revisor</th>\n                                <th>Expedientes Asignados</th>\n                            </tr>\n                        </thead>\n                        {props.this.state.tasks4.map((dato, index) => (\n                            <tbody>\n                                <tr>\n                                    <td>{index + 1}</td>\n                                    <td>{dato[0]}</td>\n                                    <td>{dato[1]}</td>\n                                </tr>\n                            </tbody>\n                        ))}\n                    </Table>\n                </div>}\n            </div>\n            {props.this.state.View4 &&\n                <Pdf targetRef={ref4} filename=\"reporte4.pdf\"\n                    options={props.this.state.options} x={.5} y={.5} scale={0.8}\n                >\n                    {({ toPdf }) => <Button\n                        color=\"success\"\n                        style={{ float: 'right' }}\n                        onClick={toPdf}>Descargar Reporte</Button>}\n                </Pdf>\n            }\n        </Container>\n    );\n}\n\nfunction Report_5(props) {\n    return (\n        <Container>\n            <div className=\"boxer\"></div>\n            <div className=\"boxer\"></div>\n            <Button\n                color=\"primary\"\n                onClick={() => props.this.fetchTask5()}\n            >\n                Generar Reporte\n            </Button>\n            <div ref={ref5}>\n                <div className=\"xmt\">\n                    <h2>Reporte 5 </h2>\n                </div>\n                <div className=\"xm\" >\n                    <text style={{ textAlign: 'center' }}>Top 5 de aplicantes con la mayor cantidad de documentos rechazados</text>\n                </div>\n                <div className=\"box\"></div>\n                {props.this.state.View5 && <div>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>No.</th>\n                                <th>Nombre y Apellido</th>\n                                <th>Documentos Rechazados</th>\n                            </tr>\n                        </thead>\n                        {props.this.state.tasks5.map((dato, index) => (\n                            <tbody>\n                                <tr>\n                                    <td>{index + 1}</td>\n                                    <td>{dato[0]} {dato[1]}</td>\n                                    <td>{dato[2]}</td>\n                                </tr>\n                            </tbody>\n                        ))}\n                    </Table>\n                </div>}\n            </div>\n            {props.this.state.View5 &&\n                <Pdf targetRef={ref5} filename=\"reporte5.pdf\"\n                    options={props.this.state.options} x={.5} y={.5} scale={0.8}\n                >\n                    {({ toPdf }) => <Button\n                        color=\"success\"\n                        style={{ float: 'right' }}\n                        onClick={toPdf}>Descargar Reporte</Button>}\n                </Pdf>\n            }\n        </Container>\n    );\n}\n\nfunction Report_6(props) {\n    return (\n        <Container>\n            <div className=\"boxer\"></div>\n            <div className=\"boxer\"></div>\n            <Button\n                color=\"primary\"\n                onClick={() => props.this.fetchTask6()}\n            >\n                Generar Reporte\n            </Button>\n            <div ref={ref6}>\n                <div className=\"xmt\">\n                    <h2>Reporte 6 </h2>\n                </div>\n                <div className=\"xm\" >\n                    <text style={{ textAlign: 'center' }}>Top 5 de Departamentos con mayor uso de su capital total y el puesto con mayor salario con el que cuenta</text>\n                </div>\n                <div className=\"box\"></div>\n                {props.this.state.View6 && <div>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>No.</th>\n                                <th>Departamento</th>\n                                <th>Uso de Capital</th>\n                                <th>Puesto</th>\n                                <th>Salario</th>\n                            </tr>\n                        </thead>\n                        {props.this.state.tasks6.map((dato, index) => (\n                            <tbody>\n                                <tr>\n                                    <td>{index + 1}</td>\n                                    <td>{dato[0]}</td>\n                                    <td>{dato[1]}</td>\n                                    <td>{dato[2]}</td>\n                                    <td>{dato[3]}</td>\n                                </tr>\n                            </tbody>\n                        ))}\n                    </Table>\n                </div>}\n            </div>\n            {props.this.state.View6 &&\n                <Pdf targetRef={ref6} filename=\"reporte6.pdf\"\n                    options={props.this.state.options} x={.5} y={.5} scale={0.8}\n                >\n                    {({ toPdf }) => <Button\n                        color=\"success\"\n                        style={{ float: 'right' }}\n                        onClick={toPdf}>Descargar Reporte</Button>}\n                </Pdf>\n            }\n        </Container>\n    );\n}\n\n\nfunction Load(props) {\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n            <div class=\"load\">\n                <hr /><hr /><hr /><hr />\n            </div>\n        </Modal>\n    );\n}\n\n\nexport default AdminSystem;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/AdminUser.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reclutador.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Applicant.js",["72"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/reviewer.js",["73"],"import React, { Component } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { getCurrentDate } from '../utils/date'\nimport Swal from 'sweetalert2'\nimport {\n    Table,\n    Button,\n    Container,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    ModalFooter\n} from \"reactstrap\";\nimport Chat from \"./Chat\";\n\n\nclass Reviewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            load: true,\n            laod2: false,\n            nombre: '',\n            modalBuscar: false,\n            copy: [],\n            modalVer: false,\n            search: {\n                nombre: null,\n                puesto: null,\n                estado: null\n            },\n            data: {},\n            auth: false,\n            chatname: '',\n            ar: {},\n            archivos: [],\n            bus: false,\n            expedientes: [],\n            puestos: [],\n            estados: [\"Sin revisar\", \"Aceptado\", \"Correccion\", \"Corregido\"],\n            motivo: '',\n            modalMotivo: false,\n            bandera: false,\n            fileName: '',\n            file: '',\n            ReqFile: '',\n            ViewFile: false,\n            date: getCurrentDate()\n        };\n        this.handleChangeS = this.handleChangeS.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeP = this.handleChangeP.bind(this);\n        this.handleChangeE = this.handleChangeE.bind(this);\n        this.fetchProfile();\n        this.fetchDepa();\n        this.fetchTasks();\n    }\n    fetchDepa() {\n        fetch('/depasr', {\n            method: 'POST',\n            body: JSON.stringify({\n                per: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                this.fetchPuestos(data.id)\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchProfile() {\n        fetch('/pers', {\n            method: 'POST',\n            body: JSON.stringify({\n                per: this.state.id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({ nombre: data.nombre })\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchPuestos(id) {\n        console.log(this.state.depa);\n        fetch('/puestos', {\n            method: 'POST',\n            body: JSON.stringify({\n                depa: id\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({ puestos: data });\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchTasks() {\n        fetch('/selectre', {\n            method: 'POST',\n            body: JSON.stringify({\n                personal: this.state.id,\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({ expedientes: data, copy: data });\n                this.setState({ load: false })\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchTasks1() {\n        fetch('/selectre', {\n            method: 'POST',\n            body: JSON.stringify({\n                personal: this.state.id,\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({ expedientes: data, copy: data });\n                for (const exp of data) {\n                    if (exp.cui === this.state.data.cui) {\n                        this.setState({ data: exp, archivos: exp.archivos })\n                        break;\n                    }\n                }\n                this.setState({ modalVer: true });\n                this.setState({ load2: false })\n            })\n            .catch(err => console.error(err));\n    }\n\n    cerrarSesion() {\n        window.location.href = '../';\n    }\n\n    mostrarModalBuscar() {\n        this.setState({ modalBuscar: true })\n    }\n\n    handleChangeS(e) {\n        const { name, value } = e.target;\n        this.setState({\n            search: {\n                ...this.state.search,\n                [name]: value\n            },\n        });\n    }\n    handleChangeP(e) {\n        this.setState({\n            search: {\n                ...this.state.search,\n                puesto: e.value\n            },\n        });\n    }\n    handleChangeE(e) {\n        this.setState({\n            search: {\n                ...this.state.search,\n                estado: e.value\n            },\n        });\n    }\n    handleChange(e) {\n        this.setState({\n            motivo: e.target.value\n        })\n    }\n    buscar() {\n        this.setState({ load2: true })\n        console.log(this.state.search)\n        var estado = null\n        if (this.state.search.estado === 'Sin Revisar') estado = '2';\n        if (this.state.search.estado === 'Aceptado') estado = '1';\n        if (this.state.search.estado === 'Correccion') estado = '0';\n        if (this.state.search.estado === 'Corregido') estado = '3';\n\n        fetch('/searche', {\n            method: 'POST',\n            body: JSON.stringify({\n                personal: this.state.id,\n                pueston: this.state.search.puesto,\n                estado: estado,\n                nombree: this.state.search.nombre\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({ expedientes: data });\n                this.setState({ load2: false, bus: true })\n            })\n            .catch(err => console.error(err));\n        this.setState({ modalBuscar: false })\n        this.setState({\n            search: {\n                ...this.state.search,\n                nombre: null,\n                puesto: null,\n                fecha: null\n            },\n        });\n    }\n    cerrarModalBuscar() {\n        this.setState({ modalBuscar: false })\n    }\n\n    cerrarModalVer() {\n        this.setState({ modalVer: false })\n    }\n\n    async abrir(exp, req) {\n        this.setState({file: `http://localhost:5000/static/expedientes/${exp}`})\n        this.setState({ ReqFile: req, fileName: exp, ViewFile: true });\n    }\n\n    cerrarModalViewFile() {\n        this.setState({ ViewFile: false });\n    }\n\n    decargarExp(cv) {\n        this.setState({ load2: true })\n        fetch('/controller2', {\n            method: 'POST',\n            body: JSON.stringify({\n                d: cv\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.blob())\n            .then((blob) => {\n                // Create blob link to download\n                const url = window.URL.createObjectURL(\n                    new Blob([blob]),\n                );\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute(\n                    'download',\n                    `${cv}`,\n                );\n                // Append to html link element page\n                document.body.appendChild(link);\n                // Start download\n                link.click();\n                this.setState({ load2: false })\n                // Clean up and remove the link\n                link.parentNode.removeChild(link);\n            });\n    }\n    aceptar(dato) {\n        this.setState({ load2: true, modalVer: false, bandera: true })\n        fetch('/archivos', {\n            method: 'PUT',\n            body: JSON.stringify({\n                ida: dato.archivoID,\n                estado: '1'\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                Swal.fire(\n                    'Hecho!',\n                    'Archivo Aceptado Correctamente',\n                    'success'\n                )\n                this.fetchTasks1();\n\n            })\n            .catch(err => console.error(err));\n    }\n    rechazar() {\n        this.setState({ load2: true, modalMotivo: false, bandera: true })\n        fetch('/archivos', {\n            method: 'PUT',\n            body: JSON.stringify({\n                ida: this.state.ar.archivoID,\n                estado: '0'\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                Swal.fire(\n                    'Hecho!',\n                    'Archivo rechazado correctamente',\n                    'success'\n                )\n                this.fetchTasks1();\n            })\n            .catch(err => console.error(err));\n        //------------------------------------------\n        this.setState({ load2: true })\n        fetch('/historial', {\n            method: 'POST',\n            body: JSON.stringify({\n                correo: this.state.data.correo,\n                nombre: this.state.data.nombre,\n                requisito: this.state.ar.requisito,\n                ruta: this.state.ar.ruta,\n                motivo: this.state.motivo,\n                fecha: this.state.date,\n                ida: this.state.ar.archivoID\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.setState({ load2: false })\n            })\n            .catch(err => console.error(err));\n    }\n    mostrarModalMotivo(dato) {\n        this.setState({ modalMotivo: true, ar: dato })\n    }\n    cerrarModalMotivo() {\n        this.setState({ modalMotivo: false })\n    }\n\n    enviar() {\n        this.setState({ load: true })\n        this.cerrarModalVer();\n        var aux = '1';\n        for (const i of this.state.data.archivos) {\n            if (i.aceptado === '0') {\n                aux = '0';\n            }\n            if (i.aceptado === '2') {\n                aux = '2';\n                break;\n            }\n        }\n        if (aux === '1') {\n            fetch('/sendcorreo', {\n                method: 'POST',\n                body: JSON.stringify({\n                    correo: this.state.data.correo,\n                    nombre: this.state.data.nombre\n                }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data.msg)\n                })\n                .catch(err => console.error(err));\n        }\n        fetch('/expedientes', {\n            method: 'PUT',\n            body: JSON.stringify({\n                cui: this.state.data.cui,\n                estado: aux\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                Swal.fire(\n                    'Hecho!',\n                    'Expediente Revisado correctamente',\n                    'success'\n                )\n                this.fetchTasks();\n            })\n            .catch(err => console.error(err));\n        this.setState({ bandera: false })\n    }\n\n    cerrarBusqueda() {\n        this.setState({ expedientes: this.state.copy, bus: false })\n    }\n    mostrarModalVer(dato) {\n        this.setState({ data: dato, modalVer: true })\n        this.setState({ archivos: dato.archivos })\n    }\n    chatear(nombre) {\n        this.setState({ auth: true, chatname: nombre })\n    }\n    regresa() {\n        this.setState({ auth: false })\n    }\n\n    render() {\n        return (\n            <div>\n                <Menu this={this} />\n                <Search this={this} />\n                <Ver this={this} />\n                <Load this={this} />\n                <ViewA this={this} />\n                <Motivo this={this} />\n                <Container>\n                    <Tabs>\n                        <TabList>\n                            <Tab>Expedientes</Tab>\n                            <Tab>CHAT</Tab>\n                        </TabList>\n                        <TabPanel>\n                            {(() => {\n                                if (this.state.load === true) {\n                                    return <Container>\n                                        <div class=\"load\">\n                                            <hr /><hr /><hr /><hr />\n                                        </div>\n                                    </Container>\n                                } else {\n                                    return (\n                                        <div>\n                                            <div className=\"xml\">\n                                                <h3>Expedientes Asignados</h3>\n                                            </div>\n                                            <div className=\"box\"></div>\n                                            <Fethc this={this} />\n                                        </div>\n\n                                    );\n                                }\n                            })()}\n                        </TabPanel>\n                        <TabPanel>\n                            {!this.state.auth && <FChat this={this} />}\n                            {this.state.auth && <HChat this={this} />}\n                        </TabPanel>\n                    </Tabs>\n                </Container>\n            </div>\n        );\n    }\n}\n\nfunction ViewA(props) {\n    return (\n        <Modal isOpen={props.this.state.ViewFile} fade={false} size=\"lg\" style={{ maxWidth: '700px', width: '100%' }}>\n            <ModalHeader>\n                <div><h3>{props.this.state.ReqFile}</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <embed src={props.this.state.file} alt=\"trial\" width=\"650\" height=\"500\"></embed>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                    color=\"danger\"\n                    onClick={() => props.this.cerrarModalViewFile()}\n                >\n                    Cerrar\n                </Button>\n            </ModalFooter>\n        </Modal>\n\n    );\n}\n\nfunction Load(props) {\n    return (\n        <Modal isOpen={props.this.state.load2} fade={false}>\n            <div class=\"load\">\n                <hr /><hr /><hr /><hr />\n            </div>\n        </Modal>\n    );\n}\n\nfunction Menu(props) {\n    return (<div>\n        <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n                <input type=\"checkbox\" />\n                <span></span>\n                <span></span>\n                <span></span>\n                <ul id=\"menu\">\n                    <button onClick={() => props.this.mostrarModalBuscar()}><li>Buscar</li></button>\n                    <div className='boxer' />\n                    <button onClick={() => props.this.cerrarSesion()}><li>Cerrar Sesion</li></button>\n                </ul>\n            </div>\n        </nav>\n        <div className='xml'>\n            <h2>Revisor {props.this.state.nombre}</h2>\n        </div>\n        <div className=\"box\"></div>\n    </div>\n    );\n}\n\nfunction Search(props) {\n    return (\n        <Modal isOpen={props.this.state.modalBuscar} fade={false}>\n            <ModalHeader>\n                <div><h3>Buscar Expediente</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                    <label>\n                        Nombre:\n                    </label>\n                    <input\n                        className=\"form-control\"\n                        name=\"nombre\"\n                        type=\"text\"\n                        onChange={props.this.handleChangeS}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label>\n                        Puesto\n                    </label>\n                    <Dropdown name=\"puesto\"\n                        options={props.this.state.puestos}\n                        onChange={props.this.handleChangeP}\n                        value={props.this.state.search.puesto}\n                        placeholder=\"--\" />\n                </FormGroup>\n                <FormGroup>\n                    <label>\n                        Estado\n                    </label>\n                    <Dropdown name=\"estado\"\n                        options={props.this.state.estados}\n                        onChange={props.this.handleChangeE}\n                        value={props.this.state.search.estado}\n                        placeholder=\"--\" />\n                </FormGroup>\n\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.this.buscar()}\n                >\n                    Buscar\n                </Button>\n                <Button\n                    color=\"danger\"\n                    onClick={() => props.this.cerrarModalBuscar()}\n                >\n                    Cancelar\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nfunction Ver(props) {\n    return (\n        <Modal isOpen={props.this.state.modalVer} fade={false}>\n            <ModalHeader>\n                <div><h3>Archivos del expediente de {props.this.state.data.nombre}</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>Requisito</th>\n                            <th>Estado</th>\n                            <th>Visualizar</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    {props.this.state.archivos.map((dato) => (\n                        (() => {\n                            if (dato.aceptado === '1') {\n                                return <Ift dato={dato} this={props.this} />\n                            } else if (dato.aceptado === '0') {\n                                return <Elset dato={dato} this={props.this} />\n                            } else if (dato.aceptado === '2') {\n                                return <Nothingt dato={dato} this={props.this} />\n                            }\n                        })()\n                    ))}\n                </Table>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.this.enviar()}\n                >\n                    Actualizar Expediente\n                </Button>\n                {(() => {\n                    if (props.this.state.bandera === false) {\n                        return <Button\n                            color=\"danger\"\n                            onClick={() => props.this.cerrarModalVer()}\n                        >\n                            Cerrar\n                        </Button>\n                    }\n                })()}\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nfunction Ift(props) {\n    var dato = props.dato;\n    return (\n        <tbody style={{ backgroundColor: \"#81C784\" }}>\n            <tr key={dato.id} >\n                <td>{dato.requisito}</td>\n                <td>Aceptado</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.decargarExp(dato.ruta)}>\n                        Descargar\n                    </Button>\n                    {\"  \"}\n                    <Button\n                        onClick={() => props.this.abrir(dato.ruta, dato.requisito)}>\n                        Ver\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nfunction Elset(props) {\n    var dato = props.dato;\n    return (\n        <tbody style={{ backgroundColor: \"#F44336\" }}>\n            <tr key={dato.id} >\n                <td>{dato.requisito}</td>\n                <td>Rechazado</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.decargarExp(dato.ruta)}>\n                        Descargar\n                    </Button>\n                    {\"  \"}\n                    <Button\n                        onClick={() => props.this.abrir(dato.ruta, dato.requisito)}>\n                        Ver\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nfunction Nothingt(props) {\n    var dato = props.dato;\n    return (\n        <tbody >\n            <tr key={dato.id} >\n                <td>{dato.requisito}</td>\n                <td>Sin revisar</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.decargarExp(dato.ruta)}>\n                        Descargar\n                    </Button>\n                    {\"  \"}\n                    <Button\n                        onClick={() => props.this.abrir(dato.ruta, dato.requisito)}>\n                        Ver\n                    </Button>\n                </td>\n                <td>\n                    <Button\n                        color=\"success\"\n                        onClick={() => props.this.aceptar(dato)}\n                    >\n                        Aceptar\n                    </Button>\n                    <Button\n                        color=\"danger\"\n                        onClick={() => props.this.mostrarModalMotivo(dato)}\n                    >\n                        Rechazar\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nfunction Motivo(props) {\n    return (\n        <Modal isOpen={props.this.state.modalMotivo} fade={false}>\n            <ModalHeader>\n                <div><h3>Detalles de rechazo</h3></div>\n            </ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                    <label>\n                        Motivo\n                    </label>\n                    <textarea\n                        className=\"form-control\"\n                        name=\"motivo\"\n                        type=\"text\"\n                        onChange={props.this.handleChange}\n                    />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.this.rechazar()}\n                >\n                    Enviar Correccion\n                </Button>\n                <Button\n                    color=\"danger\"\n                    onClick={() => props.this.cerrarModalMotivo()}\n                >\n                    Cancelar\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\nfunction HChat(props) {\n    return <div>\n\n        <div class=\"box\"></div>\n        <Button style={{ float: 'left' }}\n            className=\"btn btn-danger\"\n            onClick={() => props.this.regresa()}\n        >\n            X\n        </Button>\n\n        <Chat nombre={props.this.state.nombre} other={props.this.state.chatname} />\n    </div>\n}\n\nfunction FChat(props) {\n    return (\n        <Container>\n            <br />\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Nombre</th>\n                        <th>Puesto</th>\n                        <th>Abrir Chat</th>\n                    </tr>\n                </thead>\n\n                {props.this.state.expedientes.map((dato) => (\n                    <tbody>\n                        <tr key={dato.id} >\n                            <td>{dato.nombre}</td>\n                            <td>{dato.puesto}</td>\n                            <td>\n                                <Button\n                                    onClick={() => props.this.chatear(dato.nombre)}>\n                                    Chatear\n                                </Button>\n                            </td>\n                        </tr>\n                    </tbody>\n                ))}\n            </Table>\n        </Container>\n    );\n}\n\n\nfunction Fethc(props) {\n    return (\n        <Container>\n            <br />\n            {(() => {\n                if (props.this.state.bus === true) {\n                    return <Container>\n                        <Button style={{ float: 'right' }}\n                            className=\"btn btn-danger\"\n                            onClick={() => props.this.cerrarBusqueda()}\n                        >\n                            X\n                        </Button>\n                        <div class=\"box\"></div>\n                    </Container>\n                }\n            })()}\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Nombre</th>\n                        <th>Puesto</th>\n                        <th>Estado</th>\n                        <th>Ver Expediente</th>\n                    </tr>\n                </thead>\n\n                {props.this.state.expedientes.map((dato) => (\n                    (() => {\n                        if (dato.estado_e === '1') {\n                            return <Ifyes dato={dato} this={props.this} />\n                        } else if (dato.estado_e === '0') {\n                            return <Elsen dato={dato} this={props.this} />\n                        } else if (dato.estado_e === '2') {\n                            return <Nothing dato={dato} this={props.this} />\n                        }\n                        else if (dato.estado_e === '3') {\n                            return <Another dato={dato} this={props.this} />\n                        }\n                    })()\n                ))}\n            </Table>\n        </Container>\n    );\n}\n\nfunction Ifyes(props) {\n    var dato = props.dato;\n    return (\n        <tbody style={{ backgroundColor: \"#81C784\" }}>\n            <tr key={dato.id} >\n                <td>{dato.nombre}</td>\n                <td>{dato.puesto}</td>\n                <td>Aceptado</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.mostrarModalVer(dato)}\n                    >\n                        Ver\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nfunction Elsen(props) {\n    var dato = props.dato;\n    return (\n        <tbody style={{ backgroundColor: \"#EAE718\" }}>\n            <tr key={dato.id}>\n                <td>{dato.nombre}</td>\n                <td>{dato.puesto}</td>\n                <td>Enviado a Corregir</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.mostrarModalVer(dato)}\n                    >\n                        Ver\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nfunction Nothing(props) {\n    var dato = props.dato;\n    return (\n        <tbody>\n            <tr key={dato.id} >\n                <td>{dato.nombre}</td>\n                <td>{dato.puesto}</td>\n                <td>Sin revisar</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.mostrarModalVer(dato)}>\n                        Ver\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nfunction Another(props) {\n    var dato = props.dato;\n    return (\n        <tbody style={{ backgroundColor: \"#67A5DB\" }} >\n            <tr key={dato.id} >\n                <td>{dato.nombre}</td>\n                <td>{dato.puesto}</td>\n                <td>Corregido (Sin Revisar)</td>\n                <td>\n                    <Button\n                        onClick={() => props.this.mostrarModalVer(dato)}>\n                        Ver\n                    </Button>\n                </td>\n            </tr>\n        </tbody>\n    );\n}\n\nexport default Reviewer;","/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/coordinator.js",["74"],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/utils/socket.js",[],"/home/daniel/Escritorio/MIA-Proyecto2/client/src/components/Chat.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":18,"column":10,"nodeType":"81","messageId":"82","endLine":18,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":18,"column":16,"nodeType":"81","messageId":"82","endLine":18,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":329,"column":13,"nodeType":"86","endLine":329,"endColumn":71},{"ruleId":"84","severity":1,"message":"85","line":357,"column":13,"nodeType":"86","endLine":357,"endColumn":71},{"ruleId":"79","severity":1,"message":"87","line":10,"column":7,"nodeType":"81","messageId":"82","endLine":10,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":268,"column":25,"nodeType":"86","messageId":"90","endLine":268,"endColumn":49},{"ruleId":"88","severity":1,"message":"91","line":271,"column":25,"nodeType":"86","messageId":"90","endLine":271,"endColumn":49},{"ruleId":"88","severity":1,"message":"92","line":274,"column":25,"nodeType":"86","messageId":"90","endLine":274,"endColumn":49},{"ruleId":"88","severity":1,"message":"93","line":277,"column":25,"nodeType":"86","messageId":"90","endLine":277,"endColumn":49},{"ruleId":"88","severity":1,"message":"94","line":280,"column":25,"nodeType":"86","messageId":"90","endLine":280,"endColumn":49},{"ruleId":"88","severity":1,"message":"95","line":283,"column":25,"nodeType":"86","messageId":"90","endLine":283,"endColumn":49},{"ruleId":"96","severity":1,"message":"97","line":485,"column":17,"nodeType":"98","messageId":"99","endLine":485,"endColumn":33},{"ruleId":"79","severity":1,"message":"100","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":13},{"ruleId":"79","severity":1,"message":"101","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'SetAuth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'cookies' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Report_1 must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Report_2 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_3 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_4 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_5 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_6 must be in PascalCase or SCREAMING_SNAKE_CASE","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'axios' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]